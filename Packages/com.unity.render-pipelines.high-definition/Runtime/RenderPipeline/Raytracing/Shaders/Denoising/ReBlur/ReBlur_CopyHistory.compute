#pragma kernel CopyHistoryAccumulation COPY_HISTORY=CopyHistoryAccumulation ACCUMULATION
#pragma kernel CopyHistory COPY_HISTORY=CopyHistory

#pragma only_renderers d3d11 xboxseries ps5

#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"

// #pragma enable_d3d11_debug_symbols

#define REBLUR_COPY_HISTORY_TILE_SIZE 8

// Input textures
TEXTURE2D_X(_LightingDistanceTexture);
#if defined(ACCUMULATION)
TYPED_TEXTURE2D_X(uint, _AccumulationTexture);
#endif

// Output texture
RW_TEXTURE2D_X(float4, _LightingDistanceTextureRW);
#if defined(ACCUMULATION)
RW_TEXTURE2D_X(uint, _AccumulationTextureRW);
#endif

[numthreads(REBLUR_COPY_HISTORY_TILE_SIZE, REBLUR_COPY_HISTORY_TILE_SIZE, 1)]
void COPY_HISTORY(uint3 dispatchThreadId : SV_DispatchThreadID, uint2 groupThreadId : SV_GroupThreadID, uint2 groupId : SV_GroupID)
{
	UNITY_XR_ASSIGN_VIEW_INDEX(dispatchThreadId.z);
	uint2 currentCoord = dispatchThreadId.xy;

    // Normalize the result
    _LightingDistanceTextureRW[COORD_TEXTURE2D_X(currentCoord)] = LOAD_TEXTURE2D_X(_LightingDistanceTexture, currentCoord);
#if defined(ACCUMULATION)
    _AccumulationTextureRW[COORD_TEXTURE2D_X(currentCoord)] = LOAD_TEXTURE2D_X(_AccumulationTexture, currentCoord).x;
#endif
}
