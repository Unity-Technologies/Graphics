
# This file is generated by ant_yaml_generation package, don't edit this file manually.
# Introduce any changes under .yamato/config/*.metafile files and rerun yaml-generation (or check #devs-automation-tooling).

{% metadata_file .yamato/_cache_config.metafile -%}
{% metadata_file .yamato/_latest_editor_versions_trunk.metafile -%}

---

VikingVillage_BuiltIn_OSX_Metal_performance_playmode_runtime_mono_Linear_trunk:
    name: VikingVillage_BuiltIn on OSX_Metal_performance_playmode_runtime_mono_Linear on version trunk
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: '{{trunk.changeset.id}}'
        VV_BUILTIN_BRANCH: built-in
        VV_BUILTIN_REVISION: c61a43cd7ad4ef36f38a0219730d53e8f6e281de
        CACHE_ARGS: '{{cache.flags}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
    commands:
      -  command: git clone https://github.cds.internal.unity3d.com/andrew-theisen/Viking-Village-Perf.git -b $VV_BUILTIN_BRANCH TestProjects/Viking-Village-Perf
         retries: 3
      -  cd TestProjects/Viking-Village-Perf && git checkout $VV_BUILTIN_REVISION
      -  brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
      -  brew install unity-config
      -  unity-config settings project-path TestProjects/Viking-Village-Perf
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.test-framework@1.1.29
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
         retries: 2
      -  chmod +x utr
      -  command: rsync -aq -e 'ssh -i ~/.ssh/id_rsa_macmini' --append --timeout=30 $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
         retries: 2
      -  command: scp -i ~/.ssh/id_rsa_macmini ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install unity-downloader-cli --user --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade'"
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP '$(python3 -m site --user-base)/bin/unity-downloader-cli --source-file ~/Graphics/unity_revision.txt -c editor -c il2cpp  --wait --published-only'
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP ".Editor/Unity.app/Contents/MacOS/Unity -version"
      -  command: |5-
                export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates;  ~/Graphics/utr  --artifacts_path=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results --category=URP --editor-location=.Editor --extra-editor-arg="-addscenetobuild=Assets/Scenes/The_Viking_Village.unity" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=$GIT_BRANCH" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=$GIT_REVISION" --extra-editor-arg="-packageundertestrevdate=$GIT_REVISIONDATE" --extra-editor-arg="-scriptingbackend=Mono2x" --performance-project-id=VikingVillage_BuiltIn --platform=StandaloneOSX --report-performance-data --scripting-backend=Mono2x --suite=playmode --testfilter=$TEST_FILTER --testproject=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf --timeout=1200 --zero-tests-are-ok=1 "
                UTR_RESULT=$?
                scp -i ~/.ssh/id_rsa_macmini -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results/ TestProjects/Viking-Village-Perf
                exit $UTR_RESULT
    after:
      -  command: pip3 install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/Viking-Village-Perf/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:trunk:OSX
         rerun: on_new_revision
VikingVillage_BuiltIn_OSX_Metal_performance_playmode_editor_mono_Linear_trunk:
    name: VikingVillage_BuiltIn on OSX_Metal_performance_playmode_editor_mono_Linear on version trunk
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: '{{trunk.changeset.id}}'
        VV_BUILTIN_BRANCH: built-in
        VV_BUILTIN_REVISION: c61a43cd7ad4ef36f38a0219730d53e8f6e281de
        CACHE_ARGS: '{{cache.flags}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
    commands:
      -  command: git clone https://github.cds.internal.unity3d.com/andrew-theisen/Viking-Village-Perf.git -b $VV_BUILTIN_BRANCH TestProjects/Viking-Village-Perf
         retries: 3
      -  cd TestProjects/Viking-Village-Perf && git checkout $VV_BUILTIN_REVISION
      -  brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
      -  brew install unity-config
      -  unity-config settings project-path TestProjects/Viking-Village-Perf
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.test-framework@1.1.29
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
         retries: 2
      -  chmod +x utr
      -  command: rsync -aq -e 'ssh -i ~/.ssh/id_rsa_macmini' --append --timeout=30 $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
         retries: 2
      -  command: scp -i ~/.ssh/id_rsa_macmini ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install unity-downloader-cli --user --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade'"
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP '$(python3 -m site --user-base)/bin/unity-downloader-cli --source-file ~/Graphics/unity_revision.txt -c editor -c il2cpp  --wait --published-only'
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP ".Editor/Unity.app/Contents/MacOS/Unity -version"
      -  command: |5-
                export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates;  ~/Graphics/utr  --artifacts_path=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results --category=URP --editor-location=/Users/bokken/.Editor --extra-editor-arg="-addscenetobuild=Assets/Scenes/The_Viking_Village.unity" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=$GIT_BRANCH" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=$GIT_REVISION" --extra-editor-arg="-packageundertestrevdate=$GIT_REVISIONDATE" --extra-editor-arg="-scriptingbackend=Mono2x" --performance-project-id=VikingVillage_BuiltIn --report-performance-data --scripting-backend=Mono2x --suite=playmode --testfilter="MemoryAllocation;RuntimeProfilerMetrics" --testproject=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf --zero-tests-are-ok=1 "
                UTR_RESULT=$?
                scp -i ~/.ssh/id_rsa_macmini -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results/ TestProjects/Viking-Village-Perf
                exit $UTR_RESULT
    after:
      -  command: pip3 install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/Viking-Village-Perf/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:trunk:OSX
         rerun: on_new_revision
VikingVillage_BuiltIn_OSX_Metal_performance_build_editmode_mono_Linear_trunk:
    name: VikingVillage_BuiltIn on OSX_Metal_performance_build_editmode_mono_Linear on version trunk
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: '{{trunk.changeset.id}}'
        VV_BUILTIN_BRANCH: built-in
        VV_BUILTIN_REVISION: c61a43cd7ad4ef36f38a0219730d53e8f6e281de
        CACHE_ARGS: '{{cache.flags}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
    commands:
      -  command: git clone https://github.cds.internal.unity3d.com/andrew-theisen/Viking-Village-Perf.git -b $VV_BUILTIN_BRANCH TestProjects/Viking-Village-Perf
         retries: 3
      -  cd TestProjects/Viking-Village-Perf && git checkout $VV_BUILTIN_REVISION
      -  brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
      -  brew install unity-config
      -  unity-config settings project-path TestProjects/Viking-Village-Perf
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.test-framework@1.1.29
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
         retries: 2
      -  chmod +x utr
      -  command: rsync -aq -e 'ssh -i ~/.ssh/id_rsa_macmini' --append --timeout=30 $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
         retries: 2
      -  command: scp -i ~/.ssh/id_rsa_macmini ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install unity-downloader-cli --user --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade'"
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP '$(python3 -m site --user-base)/bin/unity-downloader-cli --source-file ~/Graphics/unity_revision.txt -c editor -c il2cpp  --wait --published-only'
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP ".Editor/Unity.app/Contents/MacOS/Unity -version"
      -  command: |5-
                export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates;  ~/Graphics/utr  --artifacts_path=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results --category=URP --editor-location=/Users/bokken/.Editor --extra-editor-arg="-addscenetobuild=Assets/Scenes/The_Viking_Village.unity" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-force-metal" --extra-editor-arg="-packageundertestbranch=$GIT_BRANCH" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=$GIT_REVISION" --extra-editor-arg="-packageundertestrevdate=$GIT_REVISIONDATE" --extra-editor-arg="-playergraphicsapi=Metal" --extra-editor-arg="-scriptingbackend=Mono2x" --performance-project-id=VikingVillage_BuiltIn --platform=editmode --report-performance-data --scripting-backend=Mono2x --suite=editor --testfilter=Build --testproject=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf --zero-tests-are-ok=1 "
                UTR_RESULT=$?
                scp -i ~/.ssh/id_rsa_macmini -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results/ TestProjects/Viking-Village-Perf
                exit $UTR_RESULT
    after:
      -  command: pip3 install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/Viking-Village-Perf/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:trunk:OSX
         rerun: on_new_revision
VikingVillage_BuiltIn_OSX_Metal_performance_playmode_runtime_mono_Linear_CUSTOM-REVISION:
    name: VikingVillage_BuiltIn on OSX_Metal_performance_playmode_runtime_mono_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
        VV_BUILTIN_BRANCH: built-in
        VV_BUILTIN_REVISION: c61a43cd7ad4ef36f38a0219730d53e8f6e281de
        CACHE_ARGS: '{{cache.flags}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
    commands:
      -  command: git clone https://github.cds.internal.unity3d.com/andrew-theisen/Viking-Village-Perf.git -b $VV_BUILTIN_BRANCH TestProjects/Viking-Village-Perf
         retries: 3
      -  cd TestProjects/Viking-Village-Perf && git checkout $VV_BUILTIN_REVISION
      -  brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
      -  brew install unity-config
      -  unity-config settings project-path TestProjects/Viking-Village-Perf
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.test-framework@1.1.29
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
         retries: 2
      -  chmod +x utr
      -  command: rsync -aq -e 'ssh -i ~/.ssh/id_rsa_macmini' --append --timeout=30 $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
         retries: 2
      -  command: scp -i ~/.ssh/id_rsa_macmini ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install unity-downloader-cli --user --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade'"
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP '$(python3 -m site --user-base)/bin/unity-downloader-cli --source-file ~/Graphics/unity_revision.txt -c editor -c il2cpp  --wait --published-only'
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP ".Editor/Unity.app/Contents/MacOS/Unity -version"
      -  command: |5-
                export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates;  ~/Graphics/utr  --artifacts_path=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results --category=URP --editor-location=.Editor --extra-editor-arg="-addscenetobuild=Assets/Scenes/The_Viking_Village.unity" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=$GIT_BRANCH" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=$GIT_REVISION" --extra-editor-arg="-packageundertestrevdate=$GIT_REVISIONDATE" --extra-editor-arg="-scriptingbackend=Mono2x" --performance-project-id=VikingVillage_BuiltIn --platform=StandaloneOSX --report-performance-data --scripting-backend=Mono2x --suite=playmode --testfilter=$TEST_FILTER --testproject=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf --timeout=1200 --zero-tests-are-ok=1 "
                UTR_RESULT=$?
                scp -i ~/.ssh/id_rsa_macmini -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results/ TestProjects/Viking-Village-Perf
                exit $UTR_RESULT
    after:
      -  command: pip3 install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/Viking-Village-Perf/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:OSX
         rerun: on_new_revision
VikingVillage_BuiltIn_OSX_Metal_performance_playmode_editor_mono_Linear_CUSTOM-REVISION:
    name: VikingVillage_BuiltIn on OSX_Metal_performance_playmode_editor_mono_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
        VV_BUILTIN_BRANCH: built-in
        VV_BUILTIN_REVISION: c61a43cd7ad4ef36f38a0219730d53e8f6e281de
        CACHE_ARGS: '{{cache.flags}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
    commands:
      -  command: git clone https://github.cds.internal.unity3d.com/andrew-theisen/Viking-Village-Perf.git -b $VV_BUILTIN_BRANCH TestProjects/Viking-Village-Perf
         retries: 3
      -  cd TestProjects/Viking-Village-Perf && git checkout $VV_BUILTIN_REVISION
      -  brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
      -  brew install unity-config
      -  unity-config settings project-path TestProjects/Viking-Village-Perf
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.test-framework@1.1.29
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
         retries: 2
      -  chmod +x utr
      -  command: rsync -aq -e 'ssh -i ~/.ssh/id_rsa_macmini' --append --timeout=30 $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
         retries: 2
      -  command: scp -i ~/.ssh/id_rsa_macmini ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install unity-downloader-cli --user --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade'"
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP '$(python3 -m site --user-base)/bin/unity-downloader-cli --source-file ~/Graphics/unity_revision.txt -c editor -c il2cpp  --wait --published-only'
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP ".Editor/Unity.app/Contents/MacOS/Unity -version"
      -  command: |5-
                export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates;  ~/Graphics/utr  --artifacts_path=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results --category=URP --editor-location=/Users/bokken/.Editor --extra-editor-arg="-addscenetobuild=Assets/Scenes/The_Viking_Village.unity" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=$GIT_BRANCH" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=$GIT_REVISION" --extra-editor-arg="-packageundertestrevdate=$GIT_REVISIONDATE" --extra-editor-arg="-scriptingbackend=Mono2x" --performance-project-id=VikingVillage_BuiltIn --report-performance-data --scripting-backend=Mono2x --suite=playmode --testfilter="MemoryAllocation;RuntimeProfilerMetrics" --testproject=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf --zero-tests-are-ok=1 "
                UTR_RESULT=$?
                scp -i ~/.ssh/id_rsa_macmini -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results/ TestProjects/Viking-Village-Perf
                exit $UTR_RESULT
    after:
      -  command: pip3 install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/Viking-Village-Perf/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:OSX
         rerun: on_new_revision
VikingVillage_BuiltIn_OSX_Metal_performance_build_editmode_mono_Linear_CUSTOM-REVISION:
    name: VikingVillage_BuiltIn on OSX_Metal_performance_build_editmode_mono_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
        VV_BUILTIN_BRANCH: built-in
        VV_BUILTIN_REVISION: c61a43cd7ad4ef36f38a0219730d53e8f6e281de
        CACHE_ARGS: '{{cache.flags}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
    commands:
      -  command: git clone https://github.cds.internal.unity3d.com/andrew-theisen/Viking-Village-Perf.git -b $VV_BUILTIN_BRANCH TestProjects/Viking-Village-Perf
         retries: 3
      -  cd TestProjects/Viking-Village-Perf && git checkout $VV_BUILTIN_REVISION
      -  brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
      -  brew install unity-config
      -  unity-config settings project-path TestProjects/Viking-Village-Perf
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.test-framework@1.1.29
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
         retries: 2
      -  chmod +x utr
      -  command: rsync -aq -e 'ssh -i ~/.ssh/id_rsa_macmini' --append --timeout=30 $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
         retries: 2
      -  command: scp -i ~/.ssh/id_rsa_macmini ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install unity-downloader-cli --user --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade'"
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP '$(python3 -m site --user-base)/bin/unity-downloader-cli --source-file ~/Graphics/unity_revision.txt -c editor -c il2cpp  --wait --published-only'
         retries: 2
      -  command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP ".Editor/Unity.app/Contents/MacOS/Unity -version"
      -  command: |5-
                export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates;  ~/Graphics/utr  --artifacts_path=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results --category=URP --editor-location=/Users/bokken/.Editor --extra-editor-arg="-addscenetobuild=Assets/Scenes/The_Viking_Village.unity" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-force-metal" --extra-editor-arg="-packageundertestbranch=$GIT_BRANCH" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=$GIT_REVISION" --extra-editor-arg="-packageundertestrevdate=$GIT_REVISIONDATE" --extra-editor-arg="-playergraphicsapi=Metal" --extra-editor-arg="-scriptingbackend=Mono2x" --performance-project-id=VikingVillage_BuiltIn --platform=editmode --report-performance-data --scripting-backend=Mono2x --suite=editor --testfilter=Build --testproject=/Users/bokken/Graphics/TestProjects/Viking-Village-Perf --zero-tests-are-ok=1 "
                UTR_RESULT=$?
                scp -i ~/.ssh/id_rsa_macmini -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/Viking-Village-Perf/test-results/ TestProjects/Viking-Village-Perf
                exit $UTR_RESULT
    after:
      -  command: pip3 install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/Viking-Village-Perf/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:OSX
         rerun: on_new_revision
