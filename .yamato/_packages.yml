 
# This file is generated by .yamato/ruamel/build.py. Don't edit this file manually. 
# Introduce any changes under .yamato/config/*.metafile files (for most cases) or under .yamato/ruamel/* within Python (more elaborate cases), and rerun build.py to regenerate all .yml files. 
# Read more under .yamato/docs/readme.md 

pack_core:
    name: Pack Core
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  mkdir packages_temp\core
      -  upm-ci package pack --package-path com.unity.render-pipelines.core --artifacts-path packages_temp/core
    artifacts:
        packages:
            paths:
              -  "packages_temp/core/upm-ci~/packages/**/*"
publish_core:
    name: Publish Core
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#test_core_windows_trunk
      -  .yamato/_packages.yml#test_core_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\core\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.core
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
publish_core_dry:
    name: Publish Core [dry run]
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#test_core_windows_trunk
      -  .yamato/_packages.yml#test_core_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\core\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.core --dry-run
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
pack_lwrp:
    name: Pack Lightweight
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  mkdir packages_temp\lwrp
      -  upm-ci package pack --package-path com.unity.render-pipelines.lightweight --artifacts-path packages_temp/lwrp
    artifacts:
        packages:
            paths:
              -  "packages_temp/lwrp/upm-ci~/packages/**/*"
publish_lwrp:
    name: Publish Lightweight
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_lwrp
      -  .yamato/_packages.yml#test_lwrp_windows_trunk
      -  .yamato/_packages.yml#test_lwrp_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\lwrp\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.lightweight
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
publish_lwrp_dry:
    name: Publish Lightweight [dry run]
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_lwrp
      -  .yamato/_packages.yml#test_lwrp_windows_trunk
      -  .yamato/_packages.yml#test_lwrp_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\lwrp\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.lightweight --dry-run
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
pack_shadergraph:
    name: Pack ShaderGraph
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  mkdir packages_temp\shadergraph
      -  upm-ci package pack --package-path com.unity.shadergraph --artifacts-path packages_temp/shadergraph
    artifacts:
        packages:
            paths:
              -  "packages_temp/shadergraph/upm-ci~/packages/**/*"
publish_shadergraph:
    name: Publish ShaderGraph
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#test_shadergraph_windows_trunk
      -  .yamato/_packages.yml#test_shadergraph_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\shadergraph\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.shadergraph
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
publish_shadergraph_dry:
    name: Publish ShaderGraph [dry run]
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#test_shadergraph_windows_trunk
      -  .yamato/_packages.yml#test_shadergraph_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\shadergraph\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.shadergraph --dry-run
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
pack_hdrp:
    name: Pack HDRP
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  mkdir packages_temp\hdrp
      -  upm-ci package pack --package-path com.unity.render-pipelines.high-definition --artifacts-path packages_temp/hdrp
    artifacts:
        packages:
            paths:
              -  "packages_temp/hdrp/upm-ci~/packages/**/*"
publish_hdrp:
    name: Publish HDRP
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_hdrp
      -  .yamato/_packages.yml#test_hdrp_windows_trunk
      -  .yamato/_packages.yml#test_hdrp_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\hdrp\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.high-definition
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
publish_hdrp_dry:
    name: Publish HDRP [dry run]
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_hdrp
      -  .yamato/_packages.yml#test_hdrp_windows_trunk
      -  .yamato/_packages.yml#test_hdrp_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\hdrp\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.high-definition --dry-run
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
pack_universal:
    name: Pack Universal
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  mkdir packages_temp\universal
      -  upm-ci package pack --package-path com.unity.render-pipelines.universal --artifacts-path packages_temp/universal
    artifacts:
        packages:
            paths:
              -  "packages_temp/universal/upm-ci~/packages/**/*"
publish_universal:
    name: Publish Universal
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#test_universal_windows_trunk
      -  .yamato/_packages.yml#test_universal_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\universal\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.universal
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
publish_universal_dry:
    name: Publish Universal [dry run]
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#test_universal_windows_trunk
      -  .yamato/_packages.yml#test_universal_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\universal\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.universal --dry-run
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
pack_vfx:
    name: Pack VFX
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  mkdir packages_temp\vfx
      -  upm-ci package pack --package-path com.unity.visualeffectgraph --artifacts-path packages_temp/vfx
    artifacts:
        packages:
            paths:
              -  "packages_temp/vfx/upm-ci~/packages/**/*"
publish_vfx:
    name: Publish VFX
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#test_vfx_windows_trunk
      -  .yamato/_packages.yml#test_vfx_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\vfx\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.visualeffectgraph
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
publish_vfx_dry:
    name: Publish VFX [dry run]
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#test_vfx_windows_trunk
      -  .yamato/_packages.yml#test_vfx_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\vfx\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.visualeffectgraph --dry-run
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
pack_config:
    name: Pack Config
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  mkdir packages_temp\config
      -  upm-ci package pack --package-path com.unity.render-pipelines.high-definition-config --artifacts-path packages_temp/config
    artifacts:
        packages:
            paths:
              -  "packages_temp/config/upm-ci~/packages/**/*"
publish_config:
    name: Publish Config
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#test_config_windows_trunk
      -  .yamato/_packages.yml#test_config_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\config\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.high-definition-config
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
publish_config_dry:
    name: Publish Config [dry run]
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#test_config_windows_trunk
      -  .yamato/_packages.yml#test_config_macos_trunk
    commands:
      -  mkdir upm-ci~\packages
      -  copy packages_temp\config\upm-ci~\packages\* upm-ci~\packages
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package publish --package-path com.unity.render-pipelines.high-definition-config --dry-run
    artifacts:
        packages:
            paths:
              -  "upm-ci~/packages/**/*"
test_core_windows_trunk:
    name: Test Core Win trunk
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\core\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.core --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_core_windows_trunk_dependencies:
    name: Test Core Win trunk - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_core_windows_trunk
      -  .yamato/_packages.yml#pack_core
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.core
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_lwrp_windows_trunk:
    name: Test Lightweight Win trunk
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#pack_lwrp
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\lwrp\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.lightweight --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_lwrp_windows_trunk_dependencies:
    name: Test Lightweight Win trunk - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_lwrp_windows_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#pack_lwrp
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\lwrp\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.lightweight
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_shadergraph_windows_trunk:
    name: Test ShaderGraph Win trunk
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\shadergraph\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.shadergraph --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_shadergraph_windows_trunk_dependencies:
    name: Test ShaderGraph Win trunk - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_shadergraph_windows_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\shadergraph\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.shadergraph
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_hdrp_windows_trunk:
    name: Test HDRP Win trunk
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#pack_hdrp
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\hdrp\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.high-definition --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_hdrp_windows_trunk_dependencies:
    name: Test HDRP Win trunk - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_hdrp_windows_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#pack_hdrp
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\hdrp\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.high-definition
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_universal_windows_trunk:
    name: Test Universal Win trunk
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\universal\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.universal --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_universal_windows_trunk_dependencies:
    name: Test Universal Win trunk - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_universal_windows_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\universal\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.universal
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_vfx_windows_trunk:
    name: Test VFX Win trunk
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\vfx\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.visualeffectgraph --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_vfx_windows_trunk_dependencies:
    name: Test VFX Win trunk - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_vfx_windows_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\vfx\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.visualeffectgraph
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_config_windows_trunk:
    name: Test Config Win trunk
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_config
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\config\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.high-definition-config --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_config_windows_trunk_dependencies:
    name: Test Config Win trunk - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_config_windows_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_config
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\config\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.high-definition-config
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_core_macos_trunk:
    name: Test Core OSX trunk
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/core/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.core --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_core_macos_trunk_dependencies:
    name: Test Core OSX trunk - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_core_macos_trunk
      -  .yamato/_packages.yml#pack_core
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.core
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_lwrp_macos_trunk:
    name: Test Lightweight OSX trunk
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#pack_lwrp
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/lwrp/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.lightweight --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_lwrp_macos_trunk_dependencies:
    name: Test Lightweight OSX trunk - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_lwrp_macos_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#pack_lwrp
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/lwrp/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.lightweight
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_shadergraph_macos_trunk:
    name: Test ShaderGraph OSX trunk
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/shadergraph/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.shadergraph --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_shadergraph_macos_trunk_dependencies:
    name: Test ShaderGraph OSX trunk - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_shadergraph_macos_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/shadergraph/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.shadergraph
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_hdrp_macos_trunk:
    name: Test HDRP OSX trunk
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#pack_hdrp
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/hdrp/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.high-definition --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_hdrp_macos_trunk_dependencies:
    name: Test HDRP OSX trunk - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_hdrp_macos_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#pack_hdrp
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/hdrp/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.high-definition
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_universal_macos_trunk:
    name: Test Universal OSX trunk
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/universal/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.universal --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_universal_macos_trunk_dependencies:
    name: Test Universal OSX trunk - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_universal_macos_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/universal/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.universal
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_vfx_macos_trunk:
    name: Test VFX OSX trunk
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/vfx/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.visualeffectgraph --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_vfx_macos_trunk_dependencies:
    name: Test VFX OSX trunk - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_vfx_macos_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/vfx/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.visualeffectgraph
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_config_macos_trunk:
    name: Test Config OSX trunk
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_config
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/config/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.high-definition-config --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_config_macos_trunk_dependencies:
    name: Test Config OSX trunk - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_config_macos_trunk
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_config
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/config/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.high-definition-config
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_core_windows_CUSTOM-REVISION:
    name: Test Core Win CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\core\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.core --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_core_windows_CUSTOM-REVISION_dependencies:
    name: Test Core Win CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_core_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.core
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_lwrp_windows_CUSTOM-REVISION:
    name: Test Lightweight Win CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#pack_lwrp
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\lwrp\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.lightweight --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_lwrp_windows_CUSTOM-REVISION_dependencies:
    name: Test Lightweight Win CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_lwrp_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#pack_lwrp
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\lwrp\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.lightweight
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_shadergraph_windows_CUSTOM-REVISION:
    name: Test ShaderGraph Win CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\shadergraph\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.shadergraph --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_shadergraph_windows_CUSTOM-REVISION_dependencies:
    name: Test ShaderGraph Win CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_shadergraph_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\shadergraph\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.shadergraph
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_hdrp_windows_CUSTOM-REVISION:
    name: Test HDRP Win CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#pack_hdrp
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\hdrp\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.high-definition --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_hdrp_windows_CUSTOM-REVISION_dependencies:
    name: Test HDRP Win CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_hdrp_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#pack_hdrp
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\hdrp\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.high-definition
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_universal_windows_CUSTOM-REVISION:
    name: Test Universal Win CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\universal\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.universal --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_universal_windows_CUSTOM-REVISION_dependencies:
    name: Test Universal Win CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_universal_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\universal\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.universal
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_vfx_windows_CUSTOM-REVISION:
    name: Test VFX Win CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\vfx\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.visualeffectgraph --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_vfx_windows_CUSTOM-REVISION_dependencies:
    name: Test VFX Win CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_vfx_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\vfx\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.visualeffectgraph
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_config_windows_CUSTOM-REVISION:
    name: Test Config Win CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\config\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --package-path com.unity.render-pipelines.high-definition-config --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_config_windows_CUSTOM-REVISION_dependencies:
    name: Test Config Win CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_config_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:windows
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~\packages
      -  copy packages_temp\config\upm-ci~\packages\packages.json upm-ci~\packages
      -  for /r packages_temp %%x in (*.tgz) do copy %%x upm-ci~\packages
      -  copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
      -  upm-ci package test -u .\.Editor --type updated-dependencies-tests --package-path com.unity.render-pipelines.high-definition-config
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_core_macos_CUSTOM-REVISION:
    name: Test Core OSX CUSTOM-REVISION
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/core/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.core --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_core_macos_CUSTOM-REVISION_dependencies:
    name: Test Core OSX CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_core_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.core
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_lwrp_macos_CUSTOM-REVISION:
    name: Test Lightweight OSX CUSTOM-REVISION
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#pack_lwrp
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/lwrp/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.lightweight --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_lwrp_macos_CUSTOM-REVISION_dependencies:
    name: Test Lightweight OSX CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_lwrp_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_packages.yml#pack_lwrp
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/lwrp/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.lightweight
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_shadergraph_macos_CUSTOM-REVISION:
    name: Test ShaderGraph OSX CUSTOM-REVISION
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/shadergraph/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.shadergraph --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_shadergraph_macos_CUSTOM-REVISION_dependencies:
    name: Test ShaderGraph OSX CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_shadergraph_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/shadergraph/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.shadergraph
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_hdrp_macos_CUSTOM-REVISION:
    name: Test HDRP OSX CUSTOM-REVISION
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#pack_hdrp
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/hdrp/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.high-definition --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_hdrp_macos_CUSTOM-REVISION_dependencies:
    name: Test HDRP OSX CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_hdrp_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_packages.yml#pack_hdrp
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/hdrp/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.high-definition
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_universal_macos_CUSTOM-REVISION:
    name: Test Universal OSX CUSTOM-REVISION
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/universal/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.universal --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_universal_macos_CUSTOM-REVISION_dependencies:
    name: Test Universal OSX CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_universal_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_universal
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/universal/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.universal
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_vfx_macos_CUSTOM-REVISION:
    name: Test VFX OSX CUSTOM-REVISION
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/vfx/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.visualeffectgraph --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_vfx_macos_CUSTOM-REVISION_dependencies:
    name: Test VFX OSX CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_vfx_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_shadergraph
      -  .yamato/_packages.yml#pack_vfx
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/vfx/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.visualeffectgraph
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
test_config_macos_CUSTOM-REVISION:
    name: Test Config OSX CUSTOM-REVISION
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/config/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --package-path com.unity.render-pipelines.high-definition-config --extra-utr-arg="--compilation-errors-as-warnings"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
    variables:
        CUSTOM_REVISION: custom_revision_not_set
test_config_macos_CUSTOM-REVISION_dependencies:
    name: Test Config OSX CUSTOM-REVISION - dependencies
    agent:
        type: Unity::VM::osx
        image: package-ci/mac:stable
        flavor: m1.mac
    dependencies:
      -  .yamato/_packages.yml#test_config_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#pack_core
      -  .yamato/_packages.yml#pack_config
      -  .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -c editor --wait --published-only
      -  mkdir upm-ci~ && mkdir upm-ci~/packages
      -  cp packages_temp/config/upm-ci~/packages/packages.json upm-ci~/packages
      -  cp packages_temp/**/upm-ci~/packages/*.tgz upm-ci~/packages
      -  cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
      -  upm-ci package test -u $(pwd)/.Editor/Unity.app/Contents/MacOS/Unity --type updated-dependencies-tests --package-path com.unity.render-pipelines.high-definition-config
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
all_package_ci_trunk:
    name: Pack and test all packages - trunk [package context]
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_core_windows_trunk
      -  .yamato/_packages.yml#test_lwrp_windows_trunk
      -  .yamato/_packages.yml#test_shadergraph_windows_trunk
      -  .yamato/_packages.yml#test_hdrp_windows_trunk
      -  .yamato/_packages.yml#test_universal_windows_trunk
      -  .yamato/_packages.yml#test_vfx_windows_trunk
      -  .yamato/_packages.yml#test_config_windows_trunk
      -  .yamato/_packages.yml#test_core_macos_trunk
      -  .yamato/_packages.yml#test_lwrp_macos_trunk
      -  .yamato/_packages.yml#test_shadergraph_macos_trunk
      -  .yamato/_packages.yml#test_hdrp_macos_trunk
      -  .yamato/_packages.yml#test_universal_macos_trunk
      -  .yamato/_packages.yml#test_vfx_macos_trunk
      -  .yamato/_packages.yml#test_config_macos_trunk
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package izon -t
      -  upm-ci package izon -d
all_package_ci_CUSTOM-REVISION:
    name: Pack and test all packages - CUSTOM-REVISION [package context]
    agent:
        type: Unity::VM
        image: package-ci/win10:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#test_core_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_lwrp_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_shadergraph_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_hdrp_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_universal_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_vfx_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_config_windows_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_core_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_lwrp_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_shadergraph_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_hdrp_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_universal_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_vfx_macos_CUSTOM-REVISION
      -  .yamato/_packages.yml#test_config_macos_CUSTOM-REVISION
    variables:
        CUSTOM_REVISION: custom_revision_not_set
    commands:
      -  npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
      -  upm-ci package izon -t
      -  upm-ci package izon -d
publish_all:
    name: Publish all packages [package context][manual]
    dependencies:
      -  .yamato/_packages.yml#publish_core
      -  .yamato/_packages.yml#publish_lwrp
      -  .yamato/_packages.yml#publish_shadergraph
      -  .yamato/_packages.yml#publish_hdrp
      -  .yamato/_packages.yml#publish_universal
      -  .yamato/_packages.yml#publish_vfx
      -  .yamato/_packages.yml#publish_config
publish_all_tag:
    name: Publish all packages [package context][manual][tag]
    agent:
        type: Unity::VM
        image: package-ci/ubuntu:stable
        flavor: b1.large
    dependencies:
      -  .yamato/_packages.yml#publish_core
      -  .yamato/_packages.yml#publish_lwrp
      -  .yamato/_packages.yml#publish_shadergraph
      -  .yamato/_packages.yml#publish_hdrp
      -  .yamato/_packages.yml#publish_universal
      -  .yamato/_packages.yml#publish_vfx
      -  .yamato/_packages.yml#publish_config
    commands:
      -  git tag v$(cd com.unity.render-pipelines.core && node -e "console.log(require('./package.json').version)")
      -  git push origin --tags
