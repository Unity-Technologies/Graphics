
{% metadata_file .yamato/_latest_editor_versions_trunk.metafile -%}

---

Universal_OSX_Metal_Standalone_mono_Linear_trunk:
    name: Universal on OSX_Metal_Standalone_mono_Linear on version trunk
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: mm1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
        # Debug stuff.
        - env | sort

        # Fix SSH config on the VM. The Bokken team is fixing this in the base images.
        - sed -i '' 's/172\.28\.218\.\*/172\.28\.224\.\*/g' ~/.ssh/config

        # Cleanup stuff for a Yamato Remote re-run. Only delete the source dir on the device if you really need to wipe it.
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/.ssh/id_rsa_cds_github ~/.ssh/config"
        # - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/Graphics"

        # Setup SSH config.
        - scp .yamato/files/ssh-config bokken@$BOKKEN_DEVICE_IP:~/.ssh/config
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 600 ~/.ssh/config"

        # Setup Git identity.
        - echo $GITHUB_CDS_SSH_PRIVKEY | base64 -D -i - -o id_rsa_cds_github
        - scp id_rsa_cds_github bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_cds_github
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 400 ~/.ssh/*"

        # Get UTR into the test folder.
        - curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr --output $YAMATO_SOURCE_DIR/TestProjects/UniversalGraphicsTest/utr
        - chmod +x $YAMATO_SOURCE_DIR/TestProjects/UniversalGraphicsTest/utr

        # Upload the Graphics repo to the device or update it. The folder will be at ~/Graphics in the remote.
        - rsync -aqP --inplace $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/

        # Install the Unity Downloader.
        - ssh bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install unity-downloader-cli --user --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade'"

        # Get the Editor and required components for the project. This will be rendered as a single line command. Beware of the quotes and the semicolons! They bite, repeatedly. :(
        - >
            ssh bokken@$BOKKEN_DEVICE_IP
            "\$(/usr/local/bin/python3 -m site --user-base)/bin/unity-downloader-cli \\
                -u {{editor_versions.trunk_latest_internal.macos.revision}} \\
                -c editor \\
                -c il2cpp \\
                --wait \\
                --published-only"

        # Run build/tests on the device and capture exit code. This will be rendered as a single line command. Beware of the backslashes too.
        - >
            ssh bokken@$BOKKEN_DEVICE_IP
            "export UPM_REGISTRY=$UPM_REGISTRY;
            echo ==================================================;
            echo UPM Registry: \$UPM_REGISTRY;
            echo ==================================================;
            cd ~/Graphics/TestProjects/UniversalGraphicsTest/;
            ./utr --artifacts_path=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results \\
                --editor-location=/Users/bokken/.Editor \\
                --platform=StandaloneOSX \\
                --reruncount=2 \\
                --scripting-backend=Mono2x \\
                --suite=playmode \\
                --testproject=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest \\
                --timeout=2400;
            echo $? > ~/.utr_result"

        # Get result data from test device.
        - scp bokken@$BOKKEN_DEVICE_IP:~/.utr_result ~/.utr_result
        - rsync -aqP bokken@$BOKKEN_DEVICE_IP:~/Graphics/TestProjects/UniversalGraphicsTest/test-results $YAMATO_SOURCE_DIR/TestProjects/UniversalGraphicsTest/

        # Print status and exit with UTR's exit code.
        - |
            UTR_RESULT=$(($(cat ~/.utr_result)))
            echo "=================================================="
            echo "UTR exit code: $UTR_RESULT"
            echo "=================================================="
            exit $UTR_RESULT

    artifacts:
        logs:
            paths:
                - "**/test-results/**"
                - "**/TestProjects/UniversalGraphicsTest/Logs/*.log"

Universal_OSX_Metal_playmode_mono_Linear_trunk:
    name: Universal on OSX_Metal_playmode_mono_Linear on version trunk
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
        # Fix SSH config on the VM. The Bokken team needs to fix this.
        - sed -i '' 's/172\.28\.218\.\*/172\.28\.224\.\*/g' ~/.ssh/config

        # Cleanup stuff.
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/.ssh/id_rsa_cds_github ~/.ssh/config"
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/Graphics"

        # Setup SSH config.
        - scp .yamato/files/ssh-config bokken@$BOKKEN_DEVICE_IP:~/.ssh/config
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 600 ~/.ssh/config"

        # Setup Git identity.
        - echo $GITHUB_CDS_SSH_PRIVKEY | base64 -D -i - -o id_rsa_cds_github
        - scp id_rsa_cds_github bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_cds_github
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 400 ~/.ssh/*"

        # Get UTR into the local Graphics repo.
        - curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr --output TestProjects/UniversalGraphicsTest/utr
        - chmod +x TestProjects/UniversalGraphicsTest/utr

        # Upload the Graphics repo to the device.
        - rsync -aqP --inplace $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
        - ssh bokken@$BOKKEN_DEVICE_IP '$(/usr/local/bin/python3 -m site --user-base)/bin/unity-downloader-cli -u {{editor_versions.trunk_latest_internal.macos.revision}} -c editor -c il2cpp  --wait --published-only'

        # Run build/tests and update/report results.
        - |
            ssh bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates; echo \$UPM_REGISTRY; cd ~/Graphics/TestProjects/UniversalGraphicsTest && ~/Graphics/TestProjects/UniversalGraphicsTest/utr --artifacts_path=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results --editor-location=/Users/bokken/.Editor --extra-editor-arg="-colorspace=Linear" --reruncount=2 --scripting-backend=Mono2x --suite=playmode --testproject=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest"
            UTR_RESULT=$?
            mkdir -p TestProjects/UniversalGraphicsTest/test-results/
            scp -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results/ TestProjects/UniversalGraphicsTest/test-results/
            exit $UTR_RESULT
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/UniversalGraphicsTest/Logs/*.log"
Universal_OSX_Metal_playmode_XR_mono_Linear_trunk:
    name: Universal on OSX_Metal_playmode_XR_mono_Linear on version trunk
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
        # Fix SSH config on the VM. The Bokken team needs to fix this.
        - sed -i '' 's/172\.28\.218\.\*/172\.28\.224\.\*/g' ~/.ssh/config

        # Cleanup stuff.
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/.ssh/id_rsa_cds_github ~/.ssh/config"
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/Graphics"

        # Setup SSH config.
        - scp .yamato/files/ssh-config bokken@$BOKKEN_DEVICE_IP:~/.ssh/config
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 600 ~/.ssh/config"

        # Setup Git identity.
        - echo $GITHUB_CDS_SSH_PRIVKEY | base64 -D -i - -o id_rsa_cds_github
        - scp id_rsa_cds_github bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_cds_github
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 400 ~/.ssh/*"

        # Get UTR into the local Graphics repo.
        - curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr --output TestProjects/UniversalGraphicsTest/utr
        - chmod +x TestProjects/UniversalGraphicsTest/utr

        # Upload the Graphics repo to the device.
        - rsync -aqP --inplace $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
        - ssh bokken@$BOKKEN_DEVICE_IP '$(/usr/local/bin/python3 -m site --user-base)/bin/unity-downloader-cli -u {{editor_versions.trunk_latest_internal.macos.revision}} -c editor -c il2cpp  --wait --published-only'

        # Run build/tests and update/report results.
        - |
            ssh bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates; echo \$UPM_REGISTRY; cd ~/Graphics/TestProjects/UniversalGraphicsTest && ~/Graphics/TestProjects/UniversalGraphicsTest/utr --artifacts_path=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results --editor-location=/Users/bokken/.Editor --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-xr-tests" --reruncount=2 --scripting-backend=Mono2x --suite=playmode --testproject=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest"
            UTR_RESULT=$?
            mkdir -p TestProjects/UniversalGraphicsTest/test-results/
            scp -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results/ TestProjects/UniversalGraphicsTest/test-results/
            exit $UTR_RESULT
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/UniversalGraphicsTest/Logs/*.log"
Universal_OSX_Metal_Standalone_mono_Linear_CUSTOM-REVISION:
    name: Universal on OSX_Metal_Standalone_mono_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    commands:
        # Fix SSH config on the VM. The Bokken team needs to fix this.
        - sed -i '' 's/172\.28\.218\.\*/172\.28\.224\.\*/g' ~/.ssh/config

        # Cleanup stuff.
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/.ssh/id_rsa_cds_github ~/.ssh/config"
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/Graphics"

        # Setup SSH config.
        - scp .yamato/files/ssh-config bokken@$BOKKEN_DEVICE_IP:~/.ssh/config
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 600 ~/.ssh/config"

        # Setup Git identity.
        - echo $GITHUB_CDS_SSH_PRIVKEY | base64 -D -i - -o id_rsa_cds_github
        - scp id_rsa_cds_github bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_cds_github
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 400 ~/.ssh/*"

        # Get UTR into the local Graphics repo.
        - curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr --output TestProjects/UniversalGraphicsTest/utr
        - chmod +x TestProjects/UniversalGraphicsTest/utr

        # Upload the Graphics repo to the device.
        - rsync -aqP --inplace $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
        - ssh bokken@$BOKKEN_DEVICE_IP '$(/usr/local/bin/python3 -m site --user-base)/bin/unity-downloader-cli --source-file ~/Graphics/unity_revision.txt -c editor -c il2cpp  --wait --published-only'

        # Run build/tests and update/report results.
        - |
            ssh bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates; echo \$UPM_REGISTRY; cd ~/Graphics/TestProjects/UniversalGraphicsTest && ~/Graphics/TestProjects/UniversalGraphicsTest/utr --artifacts_path=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results --editor-location=/Users/bokken/.Editor --platform=StandaloneOSX --reruncount=2 --scripting-backend=Mono2x --suite=playmode --testproject=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest --timeout=2400"
            UTR_RESULT=$?
            mkdir -p TestProjects/UniversalGraphicsTest/test-results/
            scp -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results/ TestProjects/UniversalGraphicsTest/test-results/
            exit $UTR_RESULT
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/UniversalGraphicsTest/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
         rerun: always
Universal_OSX_Metal_playmode_mono_Linear_CUSTOM-REVISION:
    name: Universal on OSX_Metal_playmode_mono_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    commands:
        # Fix SSH config on the VM. The Bokken team needs to fix this.
        - sed -i '' 's/172\.28\.218\.\*/172\.28\.224\.\*/g' ~/.ssh/config

        # Cleanup stuff.
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/.ssh/id_rsa_cds_github ~/.ssh/config"
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/Graphics"

        # Setup SSH config.
        - scp .yamato/files/ssh-config bokken@$BOKKEN_DEVICE_IP:~/.ssh/config
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 600 ~/.ssh/config"

        # Setup Git identity.
        - echo $GITHUB_CDS_SSH_PRIVKEY | base64 -D -i - -o id_rsa_cds_github
        - scp id_rsa_cds_github bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_cds_github
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 400 ~/.ssh/*"

        # Get UTR into the local Graphics repo.
        - curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr --output TestProjects/UniversalGraphicsTest/utr
        - chmod +x TestProjects/UniversalGraphicsTest/utr

        # Upload the Graphics repo to the device.
        - rsync -aqP --inplace $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
        - ssh bokken@$BOKKEN_DEVICE_IP '$(/usr/local/bin/python3 -m site --user-base)/bin/unity-downloader-cli --source-file ~/Graphics/unity_revision.txt -c editor -c il2cpp  --wait --published-only'

        # Run build/tests and update/report results.
        - |
            ssh bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates; echo \$UPM_REGISTRY; cd ~/Graphics/TestProjects/UniversalGraphicsTest && ~/Graphics/TestProjects/UniversalGraphicsTest/utr --artifacts_path=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results --editor-location=/Users/bokken/.Editor --extra-editor-arg="-colorspace=Linear" --reruncount=2 --scripting-backend=Mono2x --suite=playmode --testproject=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest"
            UTR_RESULT=$?
            mkdir -p TestProjects/UniversalGraphicsTest/test-results/
            scp -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results/ TestProjects/UniversalGraphicsTest/test-results/
            exit $UTR_RESULT
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/UniversalGraphicsTest/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
         rerun: always
Universal_OSX_Metal_playmode_XR_mono_Linear_CUSTOM-REVISION:
    name: Universal on OSX_Metal_playmode_XR_mono_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    commands:
        # Fix SSH config on the VM. The Bokken team needs to fix this.
        - sed -i '' 's/172\.28\.218\.\*/172\.28\.224\.\*/g' ~/.ssh/config

        # Cleanup stuff.
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/.ssh/id_rsa_cds_github ~/.ssh/config"
        - ssh bokken@$BOKKEN_DEVICE_IP "rm -rf ~/Graphics"

        # Setup SSH config.
        - scp .yamato/files/ssh-config bokken@$BOKKEN_DEVICE_IP:~/.ssh/config
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 600 ~/.ssh/config"

        # Setup Git identity.
        - echo $GITHUB_CDS_SSH_PRIVKEY | base64 -D -i - -o id_rsa_cds_github
        - scp id_rsa_cds_github bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_cds_github
        - ssh bokken@$BOKKEN_DEVICE_IP "chmod 400 ~/.ssh/*"

        # Get UTR into the local Graphics repo.
        - curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr --output TestProjects/UniversalGraphicsTest/utr
        - chmod +x TestProjects/UniversalGraphicsTest/utr

        # Upload the Graphics repo to the device.
        - rsync -aqP --inplace $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/
        - ssh bokken@$BOKKEN_DEVICE_IP '$(/usr/local/bin/python3 -m site --user-base)/bin/unity-downloader-cli --source-file ~/Graphics/unity_revision.txt -c editor -c il2cpp  --wait --published-only'

        # Run build/tests and update/report results.
        - |
            ssh bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates; echo \$UPM_REGISTRY; cd ~/Graphics/TestProjects/UniversalGraphicsTest && ~/Graphics/TestProjects/UniversalGraphicsTest/utr --artifacts_path=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results --editor-location=/Users/bokken/.Editor --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-xr-tests" --reruncount=2 --scripting-backend=Mono2x --suite=playmode --testproject=/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest"
            UTR_RESULT=$?
            mkdir -p TestProjects/UniversalGraphicsTest/test-results/
            scp -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/UniversalGraphicsTest/test-results/ TestProjects/UniversalGraphicsTest/test-results/
            exit $UTR_RESULT
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/UniversalGraphicsTest/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:macos
         rerun: always
