 
# This file is generated by .yamato/ruamel/build.py. Don't edit this file manually. 
# Introduce any changes under .yamato/config/*.metafile files (for most cases) or under .yamato/ruamel/* within Python (more elaborate cases), and rerun build.py to regenerate all .yml files. 
# Read more under .yamato/docs/readme.md 

URP_Performance_BoatAttack_Win_DX11_performance_playmode_counters_trunk:
    name: URP_Performance_BoatAttack on Win_DX11_performance_playmode_counters on version trunk
    agent:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:trunk:windows
         rerun: on-new-revision
      -  path: .yamato/urp_performance_boatattack-win-dx11.yml#Build_URP_Performance_BoatAttack_Win_DX11_Player_trunk
         rerun: on-new-revision
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=playmode --testfilter=Counters --platform=StandaloneWindows64 --report-performance-data --performance-project-id=BoatAttack --artifacts_path=test-results --timeout=1200 --player-load-path=../../players --player-connection-ip=auto
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
Build_URP_Performance_BoatAttack_Win_DX11_Player_trunk:
    name: Build URP_Performance_BoatAttack on Win_DX11_Player on version trunk
    agent:
        type: Unity::VM
        image: sdet/gamecode_win10:stable
        flavor: b1.xlarge
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:trunk:windows
         rerun: on-new-revision
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  cd TestProjects/BoatAttack && unity-downloader-cli --source-file ../../unity_revision.txt -c editor -c il2cpp  --wait --published-only
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=playmode --platform=StandaloneWindows64 --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-playergraphicsapi=Direct3D11" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-scriptingbackend=mono" --extra-editor-arg="-apicompatibilitylevel=NET_4_6" --extra-editor-arg="-stripenginecode-" --extra-editor-arg="-managedstrippinglevel=Low" --extra-editor-arg="-allowdebugging-" --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --testproject=. --editor-location=.Editor --artifacts_path=test-results  --timeout=1200 --player-save-path=../../players --build-only
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
        players:
            paths:
              -  "players/**"
URP_Performance_BoatAttack_Win_DX11_performance_playmode_memory_trunk:
    name: URP_Performance_BoatAttack on Win_DX11_performance_playmode_memory on version trunk
    agent:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:trunk:windows
         rerun: on-new-revision
      -  path: .yamato/urp_performance_boatattack-win-dx11.yml#Build_URP_Performance_BoatAttack_Win_DX11_Player_trunk
         rerun: on-new-revision
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=playmode --testfilter=Memory --platform=StandaloneWindows64 --report-performance-data --performance-project-id=BoatAttack --artifacts_path=test-results --timeout=1200 --player-load-path=../../players --player-connection-ip=auto
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
URP_Performance_BoatAttack_Win_DX11_performance_editmode_build_trunk:
    name: URP_Performance_BoatAttack on Win_DX11_performance_editmode_build on version trunk
    agent:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:trunk:windows
         rerun: on-new-revision
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  cd TestProjects/BoatAttack && unity-downloader-cli --source-file ../../unity_revision.txt -c editor -c il2cpp  --wait --published-only
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=Editor --testfilter=Build --platform=StandaloneWindows64 --report-performance-data --performance-project-id=URP_Performance --testproject=. --editor-location=.Editor --artifacts_path=test-results --extra-editor-arg="-force-d3d11"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
URP_Performance_BoatAttack_Win_DX11_performance_playmode_counters_fast-trunk:
    name: URP_Performance_BoatAttack on Win_DX11_performance_playmode_counters on version fast-trunk
    agent:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:fast-trunk:windows
         rerun: on-new-revision
      -  path: .yamato/urp_performance_boatattack-win-dx11.yml#Build_URP_Performance_BoatAttack_Win_DX11_Player_fast-trunk
         rerun: on-new-revision
    commands:
      #-  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=playmode --testfilter=Counters --platform=StandaloneWindows64 --report-performance-data --performance-project-id=BoatAttack --artifacts_path=test-results --timeout=1200 --player-load-path=../../players --player-connection-ip=auto
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
Build_URP_Performance_BoatAttack_Win_DX11_Player_fast-trunk:
    name: Build URP_Performance_BoatAttack on Win_DX11_Player on version fast-trunk
    agent:
        type: Unity::VM
        image: sdet/gamecode_win10:stable
        flavor: b1.xlarge
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:fast-trunk:windows
         rerun: on-new-revision
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  cd TestProjects/BoatAttack && unity-downloader-cli --source-file ../../unity_revision.txt -c editor -c il2cpp  --wait --published-only
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=playmode --platform=StandaloneWindows64 --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-playergraphicsapi=Direct3D11" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-scriptingbackend=mono" --extra-editor-arg="-apicompatibilitylevel=NET_4_6" --extra-editor-arg="-stripenginecode-" --extra-editor-arg="-managedstrippinglevel=Low" --extra-editor-arg="-allowdebugging-" --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --testproject=. --editor-location=.Editor --artifacts_path=test-results  --timeout=1200 --player-save-path=../../players --build-only
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
        players:
            paths:
              -  "players/**"
URP_Performance_BoatAttack_Win_DX11_performance_playmode_memory_fast-trunk:
    name: URP_Performance_BoatAttack on Win_DX11_performance_playmode_memory on version fast-trunk
    agent:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:fast-trunk:windows
         rerun: on-new-revision
      -  path: .yamato/urp_performance_boatattack-win-dx11.yml#Build_URP_Performance_BoatAttack_Win_DX11_Player_fast-trunk
         rerun: on-new-revision
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=playmode --testfilter=Memory --platform=StandaloneWindows64 --report-performance-data --performance-project-id=BoatAttack --artifacts_path=test-results --timeout=1200 --player-load-path=../../players --player-connection-ip=auto
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
URP_Performance_BoatAttack_Win_DX11_performance_editmode_build_fast-trunk:
    name: URP_Performance_BoatAttack on Win_DX11_performance_editmode_build on version fast-trunk
    agent:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:fast-trunk:windows
         rerun: on-new-revision
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  cd TestProjects/BoatAttack && unity-downloader-cli --source-file ../../unity_revision.txt -c editor -c il2cpp  --wait --published-only
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=Editor --testfilter=Build --platform=StandaloneWindows64 --report-performance-data --performance-project-id=URP_Performance --testproject=. --editor-location=.Editor --artifacts_path=test-results --extra-editor-arg="-force-d3d11"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
URP_Performance_BoatAttack_Win_DX11_performance_playmode_counters_CUSTOM-REVISION:
    name: URP_Performance_BoatAttack on Win_DX11_performance_playmode_counters on version CUSTOM-REVISION
    agent:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:CUSTOM-REVISION:windows
         rerun: always
      -  path: .yamato/urp_performance_boatattack-win-dx11.yml#Build_URP_Performance_BoatAttack_Win_DX11_Player_CUSTOM-REVISION
         rerun: always
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=playmode --testfilter=Counters --platform=StandaloneWindows64 --report-performance-data --performance-project-id=BoatAttack --artifacts_path=test-results --timeout=1200 --player-load-path=../../players --player-connection-ip=auto
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
Build_URP_Performance_BoatAttack_Win_DX11_Player_CUSTOM-REVISION:
    name: Build URP_Performance_BoatAttack on Win_DX11_Player on version CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: sdet/gamecode_win10:stable
        flavor: b1.xlarge
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:CUSTOM-REVISION:windows
         rerun: always
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  cd TestProjects/BoatAttack && unity-downloader-cli --source-file ../../unity_revision.txt -c editor -c il2cpp  --wait --published-only
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=playmode --platform=StandaloneWindows64 --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-playergraphicsapi=Direct3D11" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-scriptingbackend=mono" --extra-editor-arg="-apicompatibilitylevel=NET_4_6" --extra-editor-arg="-stripenginecode-" --extra-editor-arg="-managedstrippinglevel=Low" --extra-editor-arg="-allowdebugging-" --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --testproject=. --editor-location=.Editor --artifacts_path=test-results  --timeout=1200 --player-save-path=../../players --build-only
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
        players:
            paths:
              -  "players/**"
URP_Performance_BoatAttack_Win_DX11_performance_playmode_memory_CUSTOM-REVISION:
    name: URP_Performance_BoatAttack on Win_DX11_performance_playmode_memory on version CUSTOM-REVISION
    agent:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:CUSTOM-REVISION:windows
         rerun: always
      -  path: .yamato/urp_performance_boatattack-win-dx11.yml#Build_URP_Performance_BoatAttack_Win_DX11_Player_CUSTOM-REVISION
         rerun: always
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=playmode --testfilter=Memory --platform=StandaloneWindows64 --report-performance-data --performance-project-id=BoatAttack --artifacts_path=test-results --timeout=1200 --player-load-path=../../players --player-connection-ip=auto
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
URP_Performance_BoatAttack_Win_DX11_performance_editmode_build_CUSTOM-REVISION:
    name: URP_Performance_BoatAttack on Win_DX11_performance_editmode_build on version CUSTOM-REVISION
    agent:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    dependencies:
      -  path: .yamato/_editor.yml#editor:priming:CUSTOM-REVISION:windows
         rerun: always
    commands:
      -  git clone https://github.com/seanstolberg-unity/BoatAttack.git -b seans/feature/benchmark/enable-playmode-tests TestProjects/BoatAttack
      -  Xcopy /E /I "com.unity.render-pipelines.core" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.core" /Y
      -  Xcopy /E /I "com.unity.render-pipelines.universal" "TestProjects/BoatAttack/Packages/com.unity.render-pipelines.universal" /Y
      -  Xcopy /E /I "com.unity.shadergraph" "TestProjects/BoatAttack/Packages/com.unity.shadergraph" /Y
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output TestProjects/BoatAttack/utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  cd TestProjects/BoatAttack && unity-downloader-cli --source-file ../../unity_revision.txt -c editor -c il2cpp  --wait --published-only
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project set registry candidates --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set enable-lock-file true
      -  cd TestProjects/BoatAttack && unity-config project remove dependency com.unity.render-pipelines.universal
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.performance.runtimesettings@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.performance.runtimesettings.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.cli-project-setup@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.cli-project-setup.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.shaderanalysis@"ssh://git@github.cds.internal.unity3d.com/unity/com.unity.shaderanalysis.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test-framework@1.2.1-preview.1"
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && utr --suite=Editor --testfilter=Build --platform=StandaloneWindows64 --report-performance-data --performance-project-id=URP_Performance --testproject=. --editor-location=.Editor --artifacts_path=test-results --extra-editor-arg="-force-d3d11"
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
