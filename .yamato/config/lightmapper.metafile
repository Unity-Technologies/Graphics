project:
  name: LightMapper
  folder: LightMapper

test_platforms:
  - type: editmode
    commands:
      - [Win_DX11, Win_DX12, Win_Vulkan]: <shared.platform.commands.turn_off_firewall>
      - [all]: <shared.platform.commands.setup_utr>
      - [all]: <shared.platform.commands.unity_downloader_cli>
      - [Linux_OpenGlCore, Linux_Vulkan]:
            - command: sudo apt-get install -y ocl-icd-opencl-dev
      - [all]: <shared.platform.commands.call_utr>
  - type: Standalone
    commands:
      - [Win_DX11, Win_DX12, Win_Vulkan]: <shared.platform.commands.turn_off_firewall>
      - [all]: <shared.platform.commands.setup_utr>
      - [OSX_Metal]: <shared.platform.commands.unity_downloader_cli>
      - [Linux_OpenGlCore, Linux_Vulkan]:
            - command: sudo apt-get install -y ocl-icd-opencl-dev
      - [all]: <shared.platform.commands.call_utr>
    commands_build:
      - [Win_DX11, Win_DX12, Win_Vulkan]: <shared.platform.commands.turn_off_firewall>
      - [all]: <shared.platform.commands.setup_utr>
      - [all]: <shared.platform.commands.unity_downloader_cli>
      - [Linux_OpenGlCore, Linux_Vulkan]:
            - command: sudo apt-get install -y ocl-icd-opencl-dev
      - [all]: <shared.platform.commands.call_utr>

platforms:
  - name: Win
    apis:
      - name: DX11
    #  - name: DX12
    #  - name: Vulkan
    build_configs:
      - name: mono
    color_spaces:
      - Linear
    agents_project:
      default:
        type: Unity::VM::GPU
        image: graphics-foundation/win10-dxr:stable
        flavor: b1.xlarge
        model: rtx2080
  - name: OSX
    apis:
      - name: Metal
    #  - name: OpenGlCore
    build_configs:
      - name: mono
    color_spaces:
      - Linear
  - name: Linux
    apis:
      - name: Vulkan
      - name: OpenGlCore
    build_configs:
      - name: mono
    color_spaces:
      - Linear
    agents_project:
      default:
        type: Unity::VM::GPU
        image: package-ci/ubuntu:stable
        model: rtx2080
        flavor: b1.large

jobs:
  - name: PR <PROJECT_NAME>
    # triggers:
    #   expression: 'pull_request.target eq "<TARGET_BRANCH>" AND NOT pull_request.draft AND pull_request.changes.any match ["com.unity.render-pipelines.high-definition/**/*", "com.unity.render-pipelines.high-definition-config/**/*",  "TestProjects/HDRP_Tests/**/*", "TestProjects/HDRP_RuntimeTests/**/*"] AND NOT pull_request.changes.all match ["*.md", "**/*.md", "doc/**/*", "**/Documentation*/**/*"]'
    dependencies:
      - platform: Win
        api: DX11
        build_config: mono
        color_space: Linear
        test_platforms:
          - editmode
          - Standalone
      - platform: Linux
        api: Vulkan
        build_config: mono
        color_space: Linear
        test_platforms:
          - editmode
          - Standalone
      - platform: Linux
        api: OpenGlCore
        build_config: mono
        color_space: Linear
        test_platforms:
          - editmode
      #- platform: OSX
      #  api: Metal
      #  build_config: mono
      #  color_space: Linear
      #  test_platforms:
      #    - editmode
      #    - Standalone
  - name: Extra <PROJECT_NAME>
    dependencies:
      []
  - name: <PROJECT_NAME>
    dependencies:
      - <PROJECT_ALL_YML_FILE>#PR_<PROJECT_NAME>_<TRACK>
      - <PROJECT_ALL_YML_FILE>#Extra_<PROJECT_NAME>_<TRACK>
