target_branch: 2022.1/staging # specifies the branch on which recurrent or pr triggers are created, etc
target_editor: 2022.1 # specifies the target editor used for some package/preview publish jobs
conditional_jobs: # some jobs are relevent only depending on the branch
  preview_publish: True
  formatting: True
  packages.package_publish_all: True
  packages.project_publish_all: True
editors: # applied for all yml files
  - track: 2022.1
    name: 2022.1
    rerun_strategy: on_new_revision
    ono_branch_var: ONO_BRANCH_2022_1
    editor_pinning:
      enabled: True
      nr_commits_to_retrieve: 1
    allow_triggers: True
    variables:
      CACHE_ARGS: '{{cache.flags}}'
  - track: CUSTOM-REVISION
    name: CUSTOM-REVISION
    rerun_strategy: on_new_revision
    editor_pinning:
      enabled: False
    fast: False
    allow_triggers: False
    variables:
      CACHE_ARGS: '{{cache.flags}}'
build_configs:
  - name: il2cpp_apiNet2
    scripting_backend: IL2CPP
    api_level: NET_2_0
  - name: il2cpp_apiNet4
    scripting_backend: IL2CPP
    api_level: NET_4_6
  - name: mono_apiNet2
    scripting_backend: Mono2x
    api_level: NET_2_0
  - name: mono_apiNet4
    scripting_backend: Mono2x
    api_level: NET_4_6
  - name: il2cpp
    scripting_backend: IL2CPP
    api_level: '' # uses the project default
  - name: mono
    scripting_backend: Mono2x
    api_level: '' # uses the project default
color_spaces:
  - Linear
  - gamma
test_platforms:
  - type: Standalone
    allow_cache: False
    disable_split_build_run_for: [OSX_Metal, OSX_Apple_Silicon_Metal]
    utr_flags:
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: '%CACHE_ARGS%'
      - [all]: --suite=playmode
      - [all]: --timeout=1200
      # - [all]: --reruncount=2
      - [all]: --zero-tests-are-ok=1

      - [Win_DX11, Win_DX12, Win_Vulkan, Win_]: --platform=StandaloneWindows64
      - [Linux_OpenGlCore, Linux_Vulkan]: --platform=StandaloneLinux64
      - [OSX_OpenGlCore, OSX_Metal, OSX_Apple_Silicon_Metal]: --platform=StandaloneOSX
      - [iPhone_Metal]: --platform=iOS
      - [Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: --platform=Android

      - [Android_OpenGLES3, Android_Vulkan, iPhone_Metal,Win_DX11, Win_DX12, Win_Vulkan, Win_, Linux_OpenGlCore, Linux_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan, OSX_OpenGlCore]: --player-load-path=players

      - [all]: --artifacts_path=TestProjects/<PROJECT_FOLDER>/test-results
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --artifacts_path=/Users/bokken/Graphics/TestProjects/<PROJECT_FOLDER>/test-results

      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --editor-location=.Editor

      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --scripting-backend=<SCRIPTING_BACKEND>
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --testfilter=%TEST_FILTER%

      - [Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan, OSX_Apple_Silicon_Metal]: --architecture=ARM64
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --testproject=/Users/bokken/Graphics/TestProjects/<PROJECT_FOLDER>
      - [Win_DX11, Win_DX12, Win_Vulkan, Win_, Linux_OpenGlCore, Linux_Vulkan]: --player-connection-ip=auto

    utr_flags_build:
      - [all]: '%CACHE_ARGS%'
      - [all]: --testfilter=%TEST_FILTER%
      - [all]: --suite=playmode
      - [all]: --build-only
      - [all]: --scripting-backend=<SCRIPTING_BACKEND>
      - [all]: --extra-editor-arg="-colorspace=<COLORSPACE>"

      - [Win_DX11, Win_DX12, Win_Vulkan, Win_]: --platform=StandaloneWindows64
      - [Linux_OpenGlCore, Linux_Vulkan]: --platform=StandaloneLinux64
      - [OSX_OpenGlCore, OSX_Metal]: --platform=StandaloneOSX
      - [iPhone_Metal]: --platform=iOS
      - [Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: --platform=Android

      - [all]: --testproject=./TestProjects/<PROJECT_FOLDER>

      - [all]: --editor-location=.Editor
      - [Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: --editor-location=./WindowsEditor
      - [XRQuest_Vulkan, XRQuest_OpenGLES3]: --extra-editor-arg="-enabledxrtargets=OculusXRSDK"

      - [all]: --artifacts_path=TestProjects/<PROJECT_FOLDER>/test-results

      - [Android_OpenGLES3, Android_Vulkan, iPhone_Metal, Win_DX11, Win_DX12, Win_Vulkan, Win_, Linux_OpenGlCore, Linux_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan, OSX_OpenGlCore]: --player-save-path=players

      - [all]: --timeout=1200
      - [Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: --timeout=2700
      - [iPhone]: --timeout=1800

      ### The method and values live in /com.unity.testframework.graphics/.../Editor/SetupProject.cs
      - [Win_DX11]: --extra-editor-arg="-executemethod" --extra-editor-arg="SetupProject.ApplySettings" --extra-editor-arg="d3d11" --extra-editor-arg="<COLORSPACE>"
      - [Win_DX12]: --extra-editor-arg="-executemethod" --extra-editor-arg="SetupProject.ApplySettings" --extra-editor-arg="d3d12" --extra-editor-arg="<COLORSPACE>"
      - [Win_Vulkan, Linux_Vulkan, Android_Vulkan, XRQuest_Vulkan]: --extra-editor-arg="-executemethod" --extra-editor-arg="SetupProject.ApplySettings" --extra-editor-arg="vulkan" --extra-editor-arg="<COLORSPACE>"
      - [Android_OpenGLES3, XRQuest_OpenGLES3]: --extra-editor-arg="-executemethod" --extra-editor-arg="SetupProject.ApplySettings" --extra-editor-arg="gles3" --extra-editor-arg="<COLORSPACE>"
      - [iPhone_Metal]: --extra-editor-arg="-executemethod" --extra-editor-arg="SetupProject.ApplySettings" --extra-editor-arg="metal" --extra-editor-arg="<COLORSPACE>"

      - [Win_DX11]: --extra-editor-arg="-playergraphicsapi=Direct3D11"
      - [Win_DX12]: --extra-editor-arg="-playergraphicsapi=Direct3D12"
      - [Win_Vulkan, Linux_Vulkan, Android_Vulkan, XRQuest_Vulkan]: --extra-editor-arg="-playergraphicsapi=Vulkan"
      - [Android_OpenGLES3, XRQuest_OpenGLES3]: --extra-editor-arg="-playergraphicsapi=OpenGLES3"
      - [iPhone_Metal, OSX_Metal]: --extra-editor-arg="-playergraphicsapi=Metal"

      - [Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: --architecture=ARM64
    commands:
      - [Android_OpenGLES3, Android_Vulkan]: <shared.platform.commands.connect_bokken>
      - [Win_DX11, Win_DX12, Win_Vulkan, Android_OpenGLES3, Android_Vulkan]: <shared.platform.commands.turn_off_firewall>
      - [all]: <shared.platform.commands.setup_utr>
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: <shared.platform.commands.unity_downloader_cli>
      - [all]: <shared.platform.commands.call_utr>
        env_vars:
          - [OSX_Metal]: YAMATO_JOBDEFINITION_FRIENDLY_NAME='$YAMATO_JOBDEFINITION_FRIENDLY_NAME'
          - [OSX_Metal]: YAMATO_JOBDEFINITION_NAME='$YAMATO_JOBDEFINITION_NAME'
          - [OSX_Metal]: YAMATO_JOB_ID='$YAMATO_JOB_ID'
          - [OSX_Metal]: YAMATO_PROJECT_NAME='$YAMATO_PROJECT_NAME'
          - [OSX_Metal]: YAMATO_PROJECT_ID='$YAMATO_PROJECT_ID'
          - [OSX_Metal]: GIT_REPOSITORY_URL='$GIT_REPOSITORY_URL'
          - [OSX_Metal]: GIT_BRANCH='$GIT_BRANCH'
          - [OSX_Metal]: GIT_REVISION='$GIT_REVISION'
          - [OSX_Metal]: GIT_COMMIT_TIME='$GIT_COMMIT_TIME'
      - [Android_OpenGLES3, Android_Vulkan]: <shared.platform.commands.kill_server>
    commands_build:
      - [Win_DX11, Win_DX12, Win_Vulkan, Android_OpenGLES3, Android_Vulkan]: <shared.platform.commands.turn_off_firewall>
      - [all]: <shared.platform.commands.setup_utr>
      - [all]: <shared.platform.commands.unity_downloader_cli>
      - [all]: <shared.platform.commands.call_utr>
        env_vars:
          - [OSX_Metal]: YAMATO_JOBDEFINITION_FRIENDLY_NAME='$YAMATO_JOBDEFINITION_FRIENDLY_NAME'
          - [OSX_Metal]: YAMATO_JOBDEFINITION_NAME='$YAMATO_JOBDEFINITION_NAME'
          - [OSX_Metal]: YAMATO_JOB_ID='$YAMATO_JOB_ID'
          - [OSX_Metal]: YAMATO_PROJECT_NAME='$YAMATO_PROJECT_NAME'
          - [OSX_Metal]: YAMATO_PROJECT_ID='$YAMATO_PROJECT_ID'
          - [OSX_Metal]: GIT_REPOSITORY_URL='$GIT_REPOSITORY_URL'
          - [OSX_Metal]: GIT_BRANCH='$GIT_BRANCH'
          - [OSX_Metal]: GIT_REVISION='$GIT_REVISION'
          - [OSX_Metal]: GIT_COMMIT_TIME='$GIT_COMMIT_TIME'
    after:
      - [OSX_OpenGlCore, OSX_Metal, OSX_Apple_Silicon_Metal, iPhone_Metal, Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan, Linux_OpenGlCore, Linux_Vulkan]: <shared.platform.commands.log_parser>
    after_build:
      - [OSX_OpenGlCore, iPhone_Metal, Linux_OpenGlCore, Linux_Vulkan]: <shared.platform.commands.log_parser>
  - type: playmode
    allow_cache: False
    utr_flags:
      - [all]: '%CACHE_ARGS%'
      - [all]: --testfilter=%TEST_FILTER%
      - [all]: --zero-tests-are-ok=1
      - [all]: --suite=playmode
      - [all]: --scripting-backend=<SCRIPTING_BACKEND>
      # - [all]: --reruncount=2
      - [all]: --extra-editor-arg="-colorspace=<COLORSPACE>"

      - [all]: --testproject=./TestProjects/<PROJECT_FOLDER>
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --testproject=/Users/bokken/Graphics/TestProjects/<PROJECT_FOLDER>

      - [all]: --editor-location=.Editor
      - [Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: --editor-location=./WindowsEditor
      - [OSX_Metal]: --editor-location=/Users/bokken/.Editor
      - [OSX_Apple_Silicon_Metal]: --editor-location=.Editor

      - [all]: --artifacts_path=TestProjects/<PROJECT_FOLDER>/test-results
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --artifacts_path=/Users/bokken/Graphics/TestProjects/<PROJECT_FOLDER>/test-results

      - [Win_DX11]: --extra-editor-arg="-force-d3d11"
      - [Win_DX12]: --extra-editor-arg="-force-d3d12"
      - [Win_Vulkan, Linux_Vulkan]: --extra-editor-arg="-force-vulkan"
      - [Linux_OpenGlCore]: --extra-editor-arg="-force-glcore"
      - [OSX_Apple_Silicon_Metal]: --extra-editor-arg="-force-metal"

      - [OSX_Apple_Silicon_Metal]: --architecture=ARM64
    commands:
      - [Win_DX11, Win_DX12, Win_Vulkan]: <shared.platform.commands.turn_off_firewall>
      - [all]: <shared.platform.commands.setup_utr>
      - [all]: <shared.platform.commands.unity_downloader_cli>
      - [all]: <shared.platform.commands.call_utr>
        env_vars:
          - [OSX_Metal]: YAMATO_JOBDEFINITION_FRIENDLY_NAME='$YAMATO_JOBDEFINITION_FRIENDLY_NAME'
          - [OSX_Metal]: YAMATO_JOBDEFINITION_NAME='$YAMATO_JOBDEFINITION_NAME'
          - [OSX_Metal]: YAMATO_JOB_ID='$YAMATO_JOB_ID'
          - [OSX_Metal]: YAMATO_PROJECT_NAME='$YAMATO_PROJECT_NAME'
          - [OSX_Metal]: YAMATO_PROJECT_ID='$YAMATO_PROJECT_ID'
          - [OSX_Metal]: GIT_REPOSITORY_URL='$GIT_REPOSITORY_URL'
          - [OSX_Metal]: GIT_BRANCH='$GIT_BRANCH'
          - [OSX_Metal]: GIT_REVISION='$GIT_REVISION'
          - [OSX_Metal]: GIT_COMMIT_TIME='$GIT_COMMIT_TIME'
    after:
      - [OSX_OpenGlCore, OSX_Metal, OSX_Apple_Silicon_Metal, iPhone_Metal, Linux_OpenGlCore, Linux_Vulkan, Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: <shared.platform.commands.log_parser>

  - type: editmode
    allow_cache: False
    utr_flags:
      - [all]: '%CACHE_ARGS%'
      - [all]: --testfilter=%TEST_FILTER%
      - [all]: --zero-tests-are-ok=1
      - [all]: --suite=editor
      # - [all]: --reruncount=2
      - [all]: --scripting-backend=<SCRIPTING_BACKEND>
      - [all]: --platform=editmode
      - [all]: --extra-editor-arg="-colorspace=<COLORSPACE>"
      - [Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: --platform=Android
      - [iPhone_Metal]: --platform=iOS

      - [all]: --testproject=./TestProjects/<PROJECT_FOLDER>
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --testproject=/Users/bokken/Graphics/TestProjects/<PROJECT_FOLDER>

      - [all]: --editor-location=.Editor
      - [Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: --editor-location=./WindowsEditor
      - [OSX_Metal]: --editor-location=/Users/bokken/.Editor
      - [OSX_Apple_Silicon_Metal]: --editor-location=.Editor

      - [all]: --artifacts_path=TestProjects/<PROJECT_FOLDER>/test-results
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --artifacts_path=/Users/bokken/Graphics/TestProjects/<PROJECT_FOLDER>/test-results

      - [Win_DX11]: --extra-editor-arg="-force-d3d11"
      - [Win_DX12]: --extra-editor-arg="-force-d3d12"
      - [Win_Vulkan, Linux_Vulkan]: --extra-editor-arg="-force-vulkan"
      - [Linux_OpenGlCore]: --extra-editor-arg="-force-glcore"
      - [OSX_Metal, OSX_Apple_Silicon_Metal]: --extra-editor-arg="-force-metal"

      - [Win_DX11]: --extra-editor-arg="-playergraphicsapi=Direct3D11"
      - [Win_DX12]: --extra-editor-arg="-playergraphicsapi=Direct3D12"
      - [Win_Vulkan, Linux_Vulkan, Android_Vulkan, XRQuest_Vulkan]: --extra-editor-arg="-playergraphicsapi=Vulkan"
      - [Android_OpenGLES3, XRQuest_OpenGLES3]: --extra-editor-arg="-playergraphicsapi=OpenGLES3"
      - [iPhone_Metal, OSX_Metal, OSX_Apple_Silicon_Metal]: --extra-editor-arg="-playergraphicsapi=Metal"
    commands:
      - [Win_DX11, Win_DX12, Win_Vulkan]: <shared.platform.commands.turn_off_firewall>
      - [all]: <shared.platform.commands.setup_utr>
      - [all]: <shared.platform.commands.unity_downloader_cli>
      - [all]: <shared.platform.commands.call_utr>
        env_vars:
          - [OSX_Metal]: YAMATO_JOBDEFINITION_FRIENDLY_NAME='$YAMATO_JOBDEFINITION_FRIENDLY_NAME'
          - [OSX_Metal]: YAMATO_JOBDEFINITION_NAME='$YAMATO_JOBDEFINITION_NAME'
          - [OSX_Metal]: YAMATO_JOB_ID='$YAMATO_JOB_ID'
          - [OSX_Metal]: YAMATO_PROJECT_NAME='$YAMATO_PROJECT_NAME'
          - [OSX_Metal]: YAMATO_PROJECT_ID='$YAMATO_PROJECT_ID'
          - [OSX_Metal]: GIT_REPOSITORY_URL='$GIT_REPOSITORY_URL'
          - [OSX_Metal]: GIT_BRANCH='$GIT_BRANCH'
          - [OSX_Metal]: GIT_REVISION='$GIT_REVISION'
          - [OSX_Metal]: GIT_COMMIT_TIME='$GIT_COMMIT_TIME'
    after:
      - [OSX_OpenGlCore, OSX_Metal, OSX_Apple_Silicon_Metal, iPhone_Metal, Linux_OpenGlCore, Linux_Vulkan, Android_OpenGLES3, Android_Vulkan, XRQuest_OpenGLES3, XRQuest_Vulkan]: <shared.platform.commands.log_parser>

platforms:
  Win:
    name: Win
    os: windows
    components:
      - editor
      - il2cpp
    agents_project:
      default:
        type: Unity::VM::GPU
        image: sdet/gamecode_win10:stable
        flavor: b1.large
      standalone_build:
        type: Unity::VM
        image: sdet/gamecode_win10:stable
        flavor: b1.xlarge
      editmode:
        type: Unity::VM
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    agent_package:
      type: Unity::VM
      image: package-ci/win10:stable
      flavor: b1.large
    copycmd: copy upm-ci~\packages\*.tgz .Editor\Data\Resources\PackageManager\Editor
    editorpath: .\.Editor
    commands:
      [DX11, DX12, Vulkan, '']:
        setup_utr:
          - command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
            retries: 2
        call_utr:
          - command: |5-
                    git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                    set /p GIT_REVISIONDATE=<revdate.tmp
                    echo %GIT_REVISIONDATE%
                    del revdate.tmp
                    utr <UTR_FLAGS>
        call_utr_without_git:
          - command: utr <UTR_FLAGS>
        call_utr_and_exit_0:
          - command: |5-
                    git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                    set /p GIT_REVISIONDATE=<revdate.tmp
                    echo %GIT_REVISIONDATE%
                    del revdate.tmp
                    utr <UTR_FLAGS> & exit 0
        unity_downloader_cli:
          - command: choco install unity-downloader-cli -y -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
            retries: 2
          - command: unity-downloader-cli <EDITOR_REVISION_CMD> -c editor -c il2cpp  --wait --published-only
            retries: 2
        turn_off_firewall:
          - command: NetSh Advfirewall set allprofiles state off
        log_parser:
          - command: pip3 install ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
          - command: find_instabilities || exit 0

  OSX:
    name: OSX
    os: macos
    components:
      - editor
      - il2cpp
    agents_project_Metal:
      default:
        type: Unity::metal::macmini
        image: slough-ops/macos-10.14-xcode:stable
        flavor: m1.mac
    agents_project_OpenGLCore:
      default:
        type: Unity::VM::osx
        image: graphics-foundation/mac-10.15:v0.1.0-841394
        flavor: m1.mac
    agent_package:
      type: Unity::VM::osx
      image: package-ci/mac:stable
      flavor: m1.mac
    copycmd: cp ./upm-ci~/packages/*.tgz ./.Editor/Unity.app/Contents/Resources/PackageManager/Editor
    editorpath: "$(pwd)/.Editor/Unity.app/Contents/MacOS/Unity"
    commands:
      [Metal]:
        setup_remote_ssh_keys_for_github_cds:
          - command: sed -i '' 's/172\.28\.218\.\*/172\.28\.224\.\*/g' ~/.ssh/config
          - command: ssh bokken@$BOKKEN_DEVICE_IP "chmod 600 ~/.ssh/*"
          - command: |
                     ssh bokken@$BOKKEN_DEVICE_IP "echo \"
                     host github.cds.internal.unity3d.com
                       HostName github.cds.internal.unity3d.com
                       IdentityFile /Users/bokken/.ssh/id_rsa_cds_github
                       StrictHostKeyChecking no
                       User git\" >> ~/.ssh/config"
          - command: echo $GITHUB_CDS_SSH_PRIVKEY | base64 -D -i - -o id_rsa_cds_github
          - command: scp id_rsa_cds_github bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_cds_github && rm id_rsa_cds_github
          - command: ssh bokken@$BOKKEN_DEVICE_IP "chmod 400 ~/.ssh/*"
        setup_utr:
          - command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
            retries: 2
          - chmod +x utr
          - command: scp -i ~/.ssh/id_rsa_macmini -r $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/Graphics
            retries: 2
          - command: scp -i ~/.ssh/id_rsa_macmini ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
            retries: 2
        call_utr:
          - command: |5-
                    export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                    ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates; <env_vars> ~/Graphics/utr  <UTR_FLAGS> "
                    UTR_RESULT=$?
                    scp -i ~/.ssh/id_rsa_macmini -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/<PROJECT_FOLDER>/test-results/ TestProjects/<PROJECT_FOLDER>
                    exit $UTR_RESULT
        call_utr_without_git:
          - command: |5-
                    ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates; <env_vars> ~/Graphics/utr  <UTR_FLAGS> "
                    UTR_RESULT=$?
                    scp -i ~/.ssh/id_rsa_macmini -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/<PROJECT_FOLDER>/test-results/ TestProjects/<PROJECT_FOLDER>
                    exit $UTR_RESULT
        unity_downloader_cli:
          - command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install unity-downloader-cli --user --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade'"
            retries: 2
          - command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP '$(python3 -m site --user-base)/bin/unity-downloader-cli <EDITOR_REVISION_CMD> -c editor -c il2cpp  --wait --published-only'
            retries: 2
          - command: ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP ".Editor/Unity.app/Contents/MacOS/Unity -version"
        log_parser:
          - command: pip3 install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
          - command: find_instabilities || exit 0
      [OpenGlCore]:
        setup_utr:
          - command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
            retries: 2
          - chmod +x utr
        call_utr:
          - command: |5-
                    export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                    ./utr <UTR_FLAGS>
            retries: 2
        call_utr_without_git:
          - command: ./utr <UTR_FLAGS>
            retries: 2
        unity_downloader_cli:
          - command: brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
          - command: brew install unity-downloader-cli
            retries: 2
          - command: unity-downloader-cli <EDITOR_REVISION_CMD> -c editor -c il2cpp  --wait --published-only
            retries: 2
        log_parser:
          - command: pip3 install ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
          - command: find_instabilities || exit 0

  OSX_Apple_Silicon:
    name: OSX
    os: macos
    components:
      - editor
      - il2cpp
    agents_project_Metal:
      default:
        type: Unity::metal::macmini
        image: slough-ops/macos-11-base:stable
        model: M1
        flavor: m1.mac
    agent_package:
      type: Unity::VM::osx
      image: package-ci/mac:stable
      flavor: m1.mac
    commands:
      [Metal]:
        setup_utr:
          - curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
          - chmod +x ./utr
          - rsync -az $YAMATO_SOURCE_DIR/ bokken@$BOKKEN_DEVICE_IP:~/Graphics
          - scp -i ~/.ssh/id_rsa_macmini ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini
        call_utr:
          - |5-
                     ssh -i ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP "export UPM_REGISTRY=https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates; cd ~/Graphics; ./utr <UTR_FLAGS>"
                     UTR_RESULT=$?
                     scp -i ~/.ssh/id_rsa_macmini -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/Graphics/TestProjects/<PROJECT_FOLDER>/test-results/ TestProjects/<PROJECT_FOLDER>
                     exit $UTR_RESULT
        call_utr_without_git:
          - ./utr <UTR_FLAGS>
        unity_downloader_cli:
          - brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
          - brew install unity-downloader-cli
          - unity-downloader-cli <EDITOR_REVISION_CMD> -c editor -c il2cpp  --wait --published-only
          - rsync -az .Editor/ bokken@$BOKKEN_DEVICE_IP:~/Graphics/.Editor
        log_parser:
          - command: pip3 install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
          - command: find_instabilities || exit 0

  Linux:
    name: Linux
    os: linux
    components:
      - editor
      - il2cpp
    agents_project:
      default:
        type: Unity::VM::GPU
        image: package-ci/ubuntu:stable
        flavor: b1.large
      editmode:
        type: Unity::VM
        image: package-ci/ubuntu:stable
        flavor: b1.large
      standalone_build:
        type: Unity::VM
        image: package-ci/ubuntu:stable
        flavor: b1.xlarge
    commands:
      [OpenGlCore, Vulkan]:
        setup_utr:
          - command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
            retries: 2
          - command: chmod +x utr
        set_screen_resolution:
          - command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/Linux/2560x1440.bin --output 2560x1440.bin
            retries: 2
          - command: sudo rm /etc/edid.txt
          - command: sudo mv 2560x1440.bin /etc/edid.txt
          - command: sudo pkill Xorg && sudo systemctl restart gdm3
        call_utr:
          - command: |5-
                    export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                    DISPLAY=:0.0 ./utr <UTR_FLAGS>
        call_utr_without_git:
          - command: DISPLAY=:0.0 ./utr <UTR_FLAGS>
        unity_downloader_cli:
          - command: sudo rm -f /etc/apt/sources.list /etc/apt/sources.list.d/{nodesource,teamviewer,deadsnakes-ubuntu-ppa-}*
          - command: curl -L https://artifactory.prd.it.unity3d.com/artifactory/api/gpg/key/public | sudo apt-key add -
          - command: sudo sh -c "echo 'deb https://artifactory.prd.it.unity3d.com/artifactory/unity-apt-local bionic main' > /etc/apt/sources.list.d/unity.list"
          - command: sudo apt update
          - command: sudo apt install unity-downloader-cli
            retries: 2
          - command: sudo unity-downloader-cli <EDITOR_REVISION_CMD> -c editor -c il2cpp  --wait --published-only
            retries: 2
        log_parser:
          - command: pip3 install ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
          - command: find_instabilities || exit 0


  Android:
    name: Android
    os: windows
    components:
      - editor
      - il2cpp
      - android
    agents_project:
      default:
        type: Unity::mobile::samsung
        model: s21-eu
        image: mobile/android-execution-r19:stable
        flavor: b1.large
      standalone_build:
        type: Unity::VM
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    commands:
      [OpenGLES3, Vulkan]:
        setup_utr:
          - command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
            retries: 2
        call_utr_hikey:
          - command: |5-
                    set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                    git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                    set /p GIT_REVISIONDATE=<revdate.tmp
                    echo %GIT_REVISIONDATE%
                    del revdate.tmp
                    utr <UTR_FLAGS>
        call_utr:
          - command: |5-
                    git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                    set /p GIT_REVISIONDATE=<revdate.tmp
                    echo %GIT_REVISIONDATE%
                    del revdate.tmp
                    utr <UTR_FLAGS>
        call_utr_hikey_android_sdk_root:
          - command: |5-
                    set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                    git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                    set /p GIT_REVISIONDATE=<revdate.tmp
                    echo %GIT_REVISIONDATE%
                    del revdate.tmp
                    set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                    utr <UTR_FLAGS>
        call_utr_without_git:
          - command: utr <UTR_FLAGS>
        unity_downloader_cli:
          - command: choco install unity-downloader-cli -y -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
            retries: 2
          - command: unity-downloader-cli <EDITOR_REVISION_CMD> -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
            retries: 2
        turn_off_firewall:
          - command: NetSh Advfirewall set allprofiles state off
        connect_bokken_hikey:
          - command: '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
            retries: 2
          - command: powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
            retries: 2
        connect_bokken:
          - command: powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
            retries: 2
        kill_server:
          - command: start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
            retries: 2
        log_parser:
          - command: pip install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
          - command: find_instabilities || exit 0


  XRQuest:
    name: XRQuest
    os: windows
    components:
      - editor
      - il2cpp
      - android
    agents_project:
      default:
        type: Unity::mobile::android
        image: mobile/android-execution-r19:stable
        flavor: b1.large
      standalone_build:
        type: Unity::VM
        image: sdet/gamecode_win10:stable
        flavor: b1.large
    commands:
      [OpenGLES3, Vulkan]:
        setup_utr:
          - command: pip install pywin32 --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple
          - command: pip install requests --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple || exit 0
          - command: git clone -b xrperf-urp git@github.cds.internal.unity3d.com:unity/xr.xrautomatedtests.git
            retries: 2
        call_utr:
          - command: |5-
                    git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                    set /p GIT_REVISIONDATE=<revdate.tmp
                    echo %GIT_REVISIONDATE%
                    del revdate.tmp
                    set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                    set unityVersion={{2022_1.changeset.id}}
                    set artifactPath=Boatattack/Quest
                    set jenkinsJob=SBR_Quest_RunTest
                    set jenkinsNodeLabel=Quest
                    set cmd=<UTR_FLAGS>
                    python xr.xrautomatedtests/.yamato/BuildPlayerAndRun.py -s
        unity_downloader_cli:
          - command: pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
            retries: 2
          - command: unity-downloader-cli <EDITOR_REVISION_CMD> -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
            retries: 2
        turn_off_firewall:
          - command: NetSh Advfirewall set allprofiles state off
        connect_bokken:
          - command: '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
            retries: 2
          - command: powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
            retries: 2
        kill_server:
          - command: start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
            retries: 2
        log_parser:
          - command: pip install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
          - command: find_instabilities || exit 0

  iPhone:
    name: iPhone
    os: macos
    components:
      - editor
      - iOS
      - il2cpp
    agents_project:
      default:
        type: Unity::mobile::iPhone
        image: mobile/macos-10.15-testing:stable
        flavor: b1.medium
      standalone_build:
        type: Unity::VM::osx
        image: mobile/macos-10.15-testing:stable
        flavor: b1.large
    commands:
      [Metal]:
        setup_utr:
          - command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr --output utr
            retries: 2
          - command: chmod +x ./utr
        call_utr:
          - command: |5-
                    export GIT_REVISIONDATE=`git rev-parse HEAD | git show -s --format=%cI`
                    ./utr <UTR_FLAGS>
        call_utr_without_git:
          - command: ./utr <UTR_FLAGS>
        unity_downloader_cli:
          - command: brew tap --force-auto-update unity/unity git@github.cds.internal.unity3d.com:unity/homebrew-unity.git
            retries: 2
          - command: brew install unity/unity/unity-downloader-cli
            retries: 2
          - command: unity-downloader-cli <EDITOR_REVISION_CMD> -c editor -c iOS -c il2cpp  --wait --published-only
            retries: 2
        log_parser:
          - command: pip3 install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
          - command: find_instabilities || exit 0
non_project_agents:
  package_ci_ubuntu_large:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.large
  package_ci_ubuntu_small:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.small
  package_ci_ubuntu_small_v124:
    type: Unity::VM
    image: package-ci/ubuntu:v1.2.4-701242
    flavor: b1.small
  package_ci_win_large:
    type: Unity::VM
    image: package-ci/win10:stable
    flavor: b1.large
  package_ci_mac:
    type: Unity::VM::osx
    image: package-ci/mac:stable
    flavor: m1.mac
  sdet_win_large:
    type: Unity::VM
    image: sdet/gamecode_win10:stable
    flavor: b1.large
  sdet_win_large_gpu:
    type: Unity::VM::GPU
    image: sdet/gamecode_win10:stable
    flavor: b1.large
