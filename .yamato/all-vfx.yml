
# This file is generated by .yamato/ruamel/build.py. Don't edit this file manually.
# Introduce any changes under .yamato/config/*.metafile files (for most cases) or under .yamato/ruamel/* within Python (more elaborate cases), and rerun build.py to regenerate all .yml files.
# Read more under .yamato/docs/readme.md

{% metadata_file .yamato/_cache_config.metafile -%}
{% metadata_file .yamato/_latest_editor_versions_2020.3.metafile -%}

---

PR_VFX_2020.3:
    name: PR VFX on 2020.3
    variables:
        CUSTOM_REVISION: '{{2020_3.changeset.id}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
        CACHE_ARGS: '{{cache.flags}}'
    triggers:
        expression: pull_request.target eq "10.x.x/release" AND NOT pull_request.draft AND pull_request.changes.any match ["com.unity.visualeffectgraph/**/*", "TestProjects/VisualEffectGraph_URP/**/*", "TestProjects/VisualEffectGraph_HDRP/**/*"] AND NOT pull_request.changes.all match ["*.md", "**/*.md", "doc/**/*", "**/Documentation*/**/*"]
    dependencies:
      -  path: .yamato/all-vfx_hdrp.yml#PR_VFX_HDRP_2020.3
         rerun: on_new_revision
      -  path: .yamato/all-vfx_urp.yml#PR_VFX_URP_2020.3
         rerun: on_new_revision
      -  path: .yamato/_abv.yml#General_Checks_2020.3
         rerun: on_new_revision
Extra_VFX_2020.3:
    name: Extra VFX on 2020.3
    variables:
        CUSTOM_REVISION: '{{2020_3.changeset.id}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
        CACHE_ARGS: '{{cache.flags}}'
    dependencies:
      -  path: .yamato/all-vfx_hdrp.yml#Extra_VFX_HDRP_2020.3
         rerun: on_new_revision
      -  path: .yamato/all-vfx_urp.yml#Extra_VFX_URP_2020.3
         rerun: on_new_revision
VFX_2020.3:
    name: VFX on 2020.3
    variables:
        CUSTOM_REVISION: '{{2020_3.changeset.id}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
        CACHE_ARGS: '{{cache.flags}}'
    dependencies:
      -  path: .yamato/all-vfx.yml#PR_VFX_2020.3
         rerun: on_new_revision
      -  path: .yamato/all-vfx.yml#Extra_VFX_2020.3
         rerun: on_new_revision
Nightly_VFX_2020.3:
    name: Nightly VFX on 2020.3
    variables:
        CUSTOM_REVISION: '{{2020_3.changeset.id}}'
        UTR_VERSION: "current"
        TEST_FILTER: .*
        CACHE_ARGS: '{{cache.flags}}'
    dependencies:
      -  path: .yamato/all-vfx.yml#VFX_2020.3
         rerun: on_new_revision
PR_VFX_CUSTOM-REVISION:
    name: PR VFX on CUSTOM-REVISION
    variables:
        CUSTOM_REVISION: custom_revision_not_set
        UTR_VERSION: "current"
        TEST_FILTER: .*
        CACHE_ARGS: '{{cache.flags}}'
    dependencies:
      -  path: .yamato/all-vfx_hdrp.yml#PR_VFX_HDRP_CUSTOM-REVISION
         rerun: on_new_revision
      -  path: .yamato/all-vfx_urp.yml#PR_VFX_URP_CUSTOM-REVISION
         rerun: on_new_revision
      -  path: .yamato/_abv.yml#General_Checks_CUSTOM-REVISION
         rerun: on_new_revision
Extra_VFX_CUSTOM-REVISION:
    name: Extra VFX on CUSTOM-REVISION
    variables:
        CUSTOM_REVISION: custom_revision_not_set
        UTR_VERSION: "current"
        TEST_FILTER: .*
        CACHE_ARGS: '{{cache.flags}}'
    dependencies:
      -  path: .yamato/all-vfx_hdrp.yml#Extra_VFX_HDRP_CUSTOM-REVISION
         rerun: on_new_revision
      -  path: .yamato/all-vfx_urp.yml#Extra_VFX_URP_CUSTOM-REVISION
         rerun: on_new_revision
VFX_CUSTOM-REVISION:
    name: VFX on CUSTOM-REVISION
    variables:
        CUSTOM_REVISION: custom_revision_not_set
        UTR_VERSION: "current"
        TEST_FILTER: .*
        CACHE_ARGS: '{{cache.flags}}'
    dependencies:
      -  path: .yamato/all-vfx.yml#PR_VFX_CUSTOM-REVISION
         rerun: on_new_revision
      -  path: .yamato/all-vfx.yml#Extra_VFX_CUSTOM-REVISION
         rerun: on_new_revision
Nightly_VFX_CUSTOM-REVISION:
    name: Nightly VFX on CUSTOM-REVISION
    variables:
        CUSTOM_REVISION: custom_revision_not_set
        UTR_VERSION: "current"
        TEST_FILTER: .*
        CACHE_ARGS: '{{cache.flags}}'
    dependencies:
      -  path: .yamato/all-vfx.yml#VFX_CUSTOM-REVISION
         rerun: on_new_revision
