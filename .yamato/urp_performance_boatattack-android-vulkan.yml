
# This file is generated by ant_yaml_generation package, don't edit this file manually.
# Introduce any changes under .yamato/config/*.metafile files and rerun yaml-generation (or check #devs-automation-tooling).

{% metadata_file .yamato/_cache_config.metafile -%}
{% metadata_file .yamato/_latest_editor_versions_trunk.metafile -%}

---

URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_il2cpp_Linear_trunk:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_playmode_runtime_il2cpp_Linear on version trunk
    agent:
        type: Unity::mobile::android
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        BOAT_ATTACK_BRANCH: master
        BOAT_ATTACK_REVISION: 1ebee168f3c649252ef0947bc482ffb3fc41fede
        CACHE_ARGS: '{{cache.flags}}'
        CUSTOM_REVISION: '{{trunk.changeset.id}}'
        TEST_FILTER: .*
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        UTR_VERSION: "current"
    commands:
      -  command: '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
         retries: 2
      -  command: powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
         retries: 2
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
         retries: 2
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                utr --architecture=ARM64 --artifacts_path=TestProjects/BoatAttack/test-results --performance-project-id=BoatAttack --platform=Android --player-load-path=playersLow --report-performance-data --suite=playmode --timeout=1200
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                utr --architecture=ARM64 --artifacts_path=TestProjects/BoatAttack/test-results --performance-project-id=BoatAttack --platform=Android --player-load-path=playersMedium --report-performance-data --suite=playmode --timeout=1200
      -  command: start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
         retries: 2
    after:
      -  command: pip install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:trunk:Android
         rerun: on_new_revision
      -  path: .yamato/urp_performance_boatattack-android-vulkan.yml#Build_URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_il2cpp_Linear_trunk
         rerun: on_new_revision
Build_URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_il2cpp_Linear_trunk:
    name: Build URP_Performance_BoatAttack on Android_Vulkan_il2cpp_Linear_performance_playmode_runtime_build_Player on version trunk
    agent:
        type: Unity::VM
        image: automation-tooling/win-10:v0.0.1-971268
        flavor: b1.large
    variables:
        BOAT_ATTACK_BRANCH: master
        BOAT_ATTACK_REVISION: 1ebee168f3c649252ef0947bc482ffb3fc41fede
        CACHE_ARGS: '{{cache.flags}}'
        CUSTOM_REVISION: '{{trunk.changeset.id}}'
        TEST_FILTER: .*
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        UTR_VERSION: "current"
    commands:
      -  command: git clone https://github.com/Unity-Technologies/BoatAttack.git -b %BOAT_ATTACK_BRANCH% TestProjects/BoatAttack
         retries: 3
      -  cd TestProjects/BoatAttack && git checkout %BOAT_ATTACK_REVISION%
      -  gsudo choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  gsudo choco install unity-config
      -  unity-config settings project-path TestProjects/BoatAttack
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.addressables@1.16.7
      -  unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2
      -  unity-config project add dependency com.unity.test-framework@1.1.30
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
         retries: 2
      -  command: gsudo choco install unity-downloader-cli -y -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
         retries: 2
      -  command: unity-downloader-cli --source-file unity_revision.txt -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
         retries: 2
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                utr --architecture=ARM64 --artifacts_path=TestProjects/BoatAttack/test-results --build-only --category=URP --editor-location=./WindowsEditor --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-buildtarget" --extra-editor-arg="Android" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-playergraphicsapi=Vulkan" --extra-editor-arg="-scriptingbackend=IL2CPP" --platform=Android --player-save-path=playersLow --scripting-backend=IL2CPP --suite=playmode --testfilter=Low --testproject=./TestProjects/BoatAttack --timeout=2700
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                utr --architecture=ARM64 --artifacts_path=TestProjects/BoatAttack/test-results --build-only --category=URP --editor-location=./WindowsEditor --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-buildtarget" --extra-editor-arg="Android" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-playergraphicsapi=Vulkan" --extra-editor-arg="-scriptingbackend=IL2CPP" --platform=Android --player-save-path=playersMedium --scripting-backend=IL2CPP --suite=playmode --testfilter=Medium --testproject=./TestProjects/BoatAttack --timeout=2700
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
        players:
            paths:
              -  "players*/**"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:trunk:Android
         rerun: on_new_revision
URP_Performance_BoatAttack_Android_Vulkan_performance_build_editmode_il2cpp_Linear_trunk:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_build_editmode_il2cpp_Linear on version trunk
    agent:
        type: Unity::VM
        image: automation-tooling/win-10:v0.0.1-971268
        flavor: b1.large
    variables:
        BOAT_ATTACK_BRANCH: master
        BOAT_ATTACK_REVISION: 1ebee168f3c649252ef0947bc482ffb3fc41fede
        CACHE_ARGS: '{{cache.flags}}'
        CUSTOM_REVISION: '{{trunk.changeset.id}}'
        TEST_FILTER: .*
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        UTR_VERSION: "current"
    commands:
      -  command: git clone https://github.com/Unity-Technologies/BoatAttack.git -b %BOAT_ATTACK_BRANCH% TestProjects/BoatAttack
         retries: 3
      -  cd TestProjects/BoatAttack && git checkout %BOAT_ATTACK_REVISION%
      -  gsudo choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  gsudo choco install unity-config
      -  unity-config settings project-path TestProjects/BoatAttack
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.addressables@1.16.7
      -  unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2
      -  unity-config project add dependency com.unity.test-framework@1.1.30
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
         retries: 2
      -  command: gsudo choco install unity-downloader-cli -y -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
         retries: 2
      -  command: unity-downloader-cli --source-file unity_revision.txt -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
         retries: 2
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                utr --artifacts_path=TestProjects/BoatAttack/test-results --category=URP --editor-location=./WindowsEditor --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-buildtarget" --extra-editor-arg="Android" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-playergraphicsapi=Vulkan" --extra-editor-arg="-scriptingbackend=IL2CPP" --performance-project-id=BoatAttack --platform=Android --report-performance-data --scripting-backend=IL2CPP --suite=editor --testfilter=Low --testproject=./TestProjects/BoatAttack
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                utr --artifacts_path=TestProjects/BoatAttack/test-results --category=URP --editor-location=./WindowsEditor --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-buildtarget" --extra-editor-arg="Android" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-playergraphicsapi=Vulkan" --extra-editor-arg="-scriptingbackend=IL2CPP" --performance-project-id=BoatAttack --platform=Android --report-performance-data --scripting-backend=IL2CPP --suite=editor --testfilter=Medium --testproject=./TestProjects/BoatAttack
    after:
      -  command: pip install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:trunk:Android
         rerun: on_new_revision
URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_il2cpp_Linear_CUSTOM-REVISION:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_playmode_runtime_il2cpp_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::mobile::android
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        BOAT_ATTACK_BRANCH: master
        BOAT_ATTACK_REVISION: 1ebee168f3c649252ef0947bc482ffb3fc41fede
        CACHE_ARGS: '{{cache.flags}}'
        CUSTOM_REVISION: custom_revision_not_set
        TEST_FILTER: .*
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        UTR_VERSION: "current"
    commands:
      -  command: '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
         retries: 2
      -  command: powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
         retries: 2
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
         retries: 2
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                utr --architecture=ARM64 --artifacts_path=TestProjects/BoatAttack/test-results --performance-project-id=BoatAttack --platform=Android --player-load-path=playersLow --report-performance-data --suite=playmode --timeout=1200
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                utr --architecture=ARM64 --artifacts_path=TestProjects/BoatAttack/test-results --performance-project-id=BoatAttack --platform=Android --player-load-path=playersMedium --report-performance-data --suite=playmode --timeout=1200
      -  command: start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
         retries: 2
    after:
      -  command: pip install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:Android
         rerun: on_new_revision
      -  path: .yamato/urp_performance_boatattack-android-vulkan.yml#Build_URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_il2cpp_Linear_CUSTOM-REVISION
         rerun: on_new_revision
Build_URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_il2cpp_Linear_CUSTOM-REVISION:
    name: Build URP_Performance_BoatAttack on Android_Vulkan_il2cpp_Linear_performance_playmode_runtime_build_Player on version CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: automation-tooling/win-10:v0.0.1-971268
        flavor: b1.large
    variables:
        BOAT_ATTACK_BRANCH: master
        BOAT_ATTACK_REVISION: 1ebee168f3c649252ef0947bc482ffb3fc41fede
        CACHE_ARGS: '{{cache.flags}}'
        CUSTOM_REVISION: custom_revision_not_set
        TEST_FILTER: .*
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        UTR_VERSION: "current"
    commands:
      -  command: git clone https://github.com/Unity-Technologies/BoatAttack.git -b %BOAT_ATTACK_BRANCH% TestProjects/BoatAttack
         retries: 3
      -  cd TestProjects/BoatAttack && git checkout %BOAT_ATTACK_REVISION%
      -  gsudo choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  gsudo choco install unity-config
      -  unity-config settings project-path TestProjects/BoatAttack
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.addressables@1.16.7
      -  unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2
      -  unity-config project add dependency com.unity.test-framework@1.1.30
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
         retries: 2
      -  command: gsudo choco install unity-downloader-cli -y -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
         retries: 2
      -  command: unity-downloader-cli --source-file unity_revision.txt -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
         retries: 2
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                utr --architecture=ARM64 --artifacts_path=TestProjects/BoatAttack/test-results --build-only --category=URP --editor-location=./WindowsEditor --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-buildtarget" --extra-editor-arg="Android" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-playergraphicsapi=Vulkan" --extra-editor-arg="-scriptingbackend=IL2CPP" --platform=Android --player-save-path=playersLow --scripting-backend=IL2CPP --suite=playmode --testfilter=Low --testproject=./TestProjects/BoatAttack --timeout=2700
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                utr --architecture=ARM64 --artifacts_path=TestProjects/BoatAttack/test-results --build-only --category=URP --editor-location=./WindowsEditor --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-buildtarget" --extra-editor-arg="Android" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-playergraphicsapi=Vulkan" --extra-editor-arg="-scriptingbackend=IL2CPP" --platform=Android --player-save-path=playersMedium --scripting-backend=IL2CPP --suite=playmode --testfilter=Medium --testproject=./TestProjects/BoatAttack --timeout=2700
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
        players:
            paths:
              -  "players*/**"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:Android
         rerun: on_new_revision
URP_Performance_BoatAttack_Android_Vulkan_performance_build_editmode_il2cpp_Linear_CUSTOM-REVISION:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_build_editmode_il2cpp_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: automation-tooling/win-10:v0.0.1-971268
        flavor: b1.large
    variables:
        BOAT_ATTACK_BRANCH: master
        BOAT_ATTACK_REVISION: 1ebee168f3c649252ef0947bc482ffb3fc41fede
        CACHE_ARGS: '{{cache.flags}}'
        CUSTOM_REVISION: custom_revision_not_set
        TEST_FILTER: .*
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        UTR_VERSION: "current"
    commands:
      -  command: git clone https://github.com/Unity-Technologies/BoatAttack.git -b %BOAT_ATTACK_BRANCH% TestProjects/BoatAttack
         retries: 3
      -  cd TestProjects/BoatAttack && git checkout %BOAT_ATTACK_REVISION%
      -  gsudo choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  gsudo choco install unity-config
      -  unity-config settings project-path TestProjects/BoatAttack
      -  unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core"
      -  unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal"
      -  unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph"
      -  unity-config project add dependency com.unity.addressables@1.16.7
      -  unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2
      -  unity-config project add dependency com.unity.test-framework@1.1.30
      -  unity-config project add dependency com.unity.test-framework.performance@2.4.0
      -  unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview
      -  unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12
      -  unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"
      -  unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git"
      -  unity-config project add testable com.unity.cli-project-setup
      -  unity-config project add testable com.unity.test.performance.runtimesettings
      -  unity-config project add testable com.unity.test.metadata-manager
      -  unity-config project add testable com.unity.testing.graphics-performance
      -  unity-config project add testable com.unity.render-pipelines.core
      -  unity-config project add testable unity.graphictests.performance.universal
      -  unity-config project set project-update false
      -  command: curl -s https://artifactory.prd.it.unity3d.com/artifactory/unity-tools-local/utr-standalone/utr.bat --output utr.bat
         retries: 2
      -  command: gsudo choco install unity-downloader-cli -y -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
         retries: 2
      -  command: unity-downloader-cli --source-file unity_revision.txt -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
         retries: 2
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                utr --artifacts_path=TestProjects/BoatAttack/test-results --category=URP --editor-location=./WindowsEditor --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-buildtarget" --extra-editor-arg="Android" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-playergraphicsapi=Vulkan" --extra-editor-arg="-scriptingbackend=IL2CPP" --performance-project-id=BoatAttack --platform=Android --report-performance-data --scripting-backend=IL2CPP --suite=editor --testfilter=Low --testproject=./TestProjects/BoatAttack
      -  command: |5-
                set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                set /p GIT_REVISIONDATE=<revdate.tmp
                echo %GIT_REVISIONDATE%
                del revdate.tmp
                set ANDROID_SDK_ROOT=%cd%/WindowsEditor/Data/PlaybackEngines/AndroidPlayer/SDK
                utr --artifacts_path=TestProjects/BoatAttack/test-results --category=URP --editor-location=./WindowsEditor --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-buildtarget" --extra-editor-arg="Android" --extra-editor-arg="-colorspace=Linear" --extra-editor-arg="-executemethod" --extra-editor-arg="Editor.Setup" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-playergraphicsapi=Vulkan" --extra-editor-arg="-scriptingbackend=IL2CPP" --performance-project-id=BoatAttack --platform=Android --report-performance-data --scripting-backend=IL2CPP --suite=editor --testfilter=Medium --testproject=./TestProjects/BoatAttack
    after:
      -  command: pip install requests ant_instability_detection --index-url https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade || exit 0
      -  command: find_instabilities || exit 0
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:Android
         rerun: on_new_revision
