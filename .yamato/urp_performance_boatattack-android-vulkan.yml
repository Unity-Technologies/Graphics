 
# This file is generated by .yamato/ruamel/build.py. Don't edit this file manually. 
# Introduce any changes under .yamato/config/*.metafile files (for most cases) or under .yamato/ruamel/* within Python (more elaborate cases), and rerun build.py to regenerate all .yml files. 
# Read more under .yamato/docs/readme.md 

URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_il2cpp_apiNet4_Linear_trunk:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_playmode_runtime_il2cpp_apiNet4_Linear on version trunk
    agent:
        type: Unity::mobile::android
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
      -  powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                 set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                 utr --suite=playmode --platform=Android --artifacts_path=test-results --player-load-path=players --scripting-backend=IL2CPP --extra-editor-arg="-colorspace=Linear" --reruncount=2 --report-performance-data --performance-project-id=BoatAttack --architecture=ARM64 --editor-location=WindowsEditor --timeout=1200
      -  start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/urp_performance_boatattack-android-vulkan.yml#Build_URP_Performance_BoatAttack_Android_Vulkan_Player_il2cpp_apiNet4_Linear_trunk
         rerun: on-new-revision
Build_URP_Performance_BoatAttack_Android_Vulkan_Player_il2cpp_apiNet4_Linear_trunk:
    name: Build URP_Performance_BoatAttack on Android_Vulkan_il2cpp_apiNet4_Linear_Player on version trunk
    agent:
        type: Unity::VM
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
      -  git clone https://github.com/Unity-Technologies/BoatAttack.git -b feature/benchmark TestProjects/BoatAttack
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.addressables@1.14.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework@1.1.18 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.render-pipelines.core  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set project-update false --project-path .
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                  git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                  set /p GIT_REVISIONDATE=<revdate.tmp
                  echo %GIT_REVISIONDATE%
                  del revdate.tmp
                  utr --suite=playmode --platform=Android --testproject=./TestProjects/BoatAttack --extra-editor-arg="-playergraphicsapi=Vulkan" --editor-location=./WindowsEditor --artifacts_path=test-results --player-save-path=players --build-only --scripting-backend=IL2CPP --extra-editor-arg="-colorspace=Linear" --architecture=ARM64 --extra-editor-arg="-executemethod Editor.Setup" --category=URP --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --timeout=2000
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
        players:
            paths:
              -  "players/**"
URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_mono_apiNet2_Linear_trunk:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_playmode_runtime_mono_apiNet2_Linear on version trunk
    agent:
        type: Unity::mobile::android
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
      -  powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                 set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                 utr --suite=playmode --platform=Android --artifacts_path=test-results --player-load-path=players --scripting-backend=Mono2x --extra-editor-arg="-colorspace=Linear" --reruncount=2 --report-performance-data --performance-project-id=BoatAttack --architecture=ARM64 --editor-location=WindowsEditor --timeout=1200
      -  start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/urp_performance_boatattack-android-vulkan.yml#Build_URP_Performance_BoatAttack_Android_Vulkan_Player_mono_apiNet2_Linear_trunk
         rerun: on-new-revision
Build_URP_Performance_BoatAttack_Android_Vulkan_Player_mono_apiNet2_Linear_trunk:
    name: Build URP_Performance_BoatAttack on Android_Vulkan_mono_apiNet2_Linear_Player on version trunk
    agent:
        type: Unity::VM
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
      -  git clone https://github.com/Unity-Technologies/BoatAttack.git -b feature/benchmark TestProjects/BoatAttack
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.addressables@1.14.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework@1.1.18 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.render-pipelines.core  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set project-update false --project-path .
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u 37c5ec4c3cb13853f9074c74cbac49a232178bd8 -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                  git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                  set /p GIT_REVISIONDATE=<revdate.tmp
                  echo %GIT_REVISIONDATE%
                  del revdate.tmp
                  utr --suite=playmode --platform=Android --testproject=./TestProjects/BoatAttack --extra-editor-arg="-playergraphicsapi=Vulkan" --editor-location=./WindowsEditor --artifacts_path=test-results --player-save-path=players --build-only --scripting-backend=Mono2x --extra-editor-arg="-colorspace=Linear" --architecture=ARM64 --extra-editor-arg="-executemethod Editor.Setup" --category=URP --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --timeout=2000
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
        players:
            paths:
              -  "players/**"
URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_il2cpp_apiNet4_Linear_2020.2:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_playmode_runtime_il2cpp_apiNet4_Linear on version 2020.2
    agent:
        type: Unity::mobile::android
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
      -  powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                 set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                 utr --suite=playmode --platform=Android --artifacts_path=test-results --player-load-path=players --scripting-backend=IL2CPP --extra-editor-arg="-colorspace=Linear" --reruncount=2 --report-performance-data --performance-project-id=BoatAttack --architecture=ARM64 --editor-location=WindowsEditor --timeout=1200
      -  start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/urp_performance_boatattack-android-vulkan.yml#Build_URP_Performance_BoatAttack_Android_Vulkan_Player_il2cpp_apiNet4_Linear_2020.2
         rerun: on-new-revision
Build_URP_Performance_BoatAttack_Android_Vulkan_Player_il2cpp_apiNet4_Linear_2020.2:
    name: Build URP_Performance_BoatAttack on Android_Vulkan_il2cpp_apiNet4_Linear_Player on version 2020.2
    agent:
        type: Unity::VM
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
      -  git clone https://github.com/Unity-Technologies/BoatAttack.git -b feature/benchmark TestProjects/BoatAttack
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.addressables@1.14.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework@1.1.18 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.render-pipelines.core  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set project-update false --project-path .
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u dff91d65251a9ab8c12af258ce88fee061d85a7d -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                  git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                  set /p GIT_REVISIONDATE=<revdate.tmp
                  echo %GIT_REVISIONDATE%
                  del revdate.tmp
                  utr --suite=playmode --platform=Android --testproject=./TestProjects/BoatAttack --extra-editor-arg="-playergraphicsapi=Vulkan" --editor-location=./WindowsEditor --artifacts_path=test-results --player-save-path=players --build-only --scripting-backend=IL2CPP --extra-editor-arg="-colorspace=Linear" --architecture=ARM64 --extra-editor-arg="-executemethod Editor.Setup" --category=URP --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --timeout=2000
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
        players:
            paths:
              -  "players/**"
URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_mono_apiNet2_Linear_2020.2:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_playmode_runtime_mono_apiNet2_Linear on version 2020.2
    agent:
        type: Unity::mobile::android
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
      -  powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                 set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                 utr --suite=playmode --platform=Android --artifacts_path=test-results --player-load-path=players --scripting-backend=Mono2x --extra-editor-arg="-colorspace=Linear" --reruncount=2 --report-performance-data --performance-project-id=BoatAttack --architecture=ARM64 --editor-location=WindowsEditor --timeout=1200
      -  start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/urp_performance_boatattack-android-vulkan.yml#Build_URP_Performance_BoatAttack_Android_Vulkan_Player_mono_apiNet2_Linear_2020.2
         rerun: on-new-revision
Build_URP_Performance_BoatAttack_Android_Vulkan_Player_mono_apiNet2_Linear_2020.2:
    name: Build URP_Performance_BoatAttack on Android_Vulkan_mono_apiNet2_Linear_Player on version 2020.2
    agent:
        type: Unity::VM
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    commands:
      -  git clone https://github.com/Unity-Technologies/BoatAttack.git -b feature/benchmark TestProjects/BoatAttack
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.addressables@1.14.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework@1.1.18 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.render-pipelines.core  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set project-update false --project-path .
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli -u dff91d65251a9ab8c12af258ce88fee061d85a7d -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                  git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                  set /p GIT_REVISIONDATE=<revdate.tmp
                  echo %GIT_REVISIONDATE%
                  del revdate.tmp
                  utr --suite=playmode --platform=Android --testproject=./TestProjects/BoatAttack --extra-editor-arg="-playergraphicsapi=Vulkan" --editor-location=./WindowsEditor --artifacts_path=test-results --player-save-path=players --build-only --scripting-backend=Mono2x --extra-editor-arg="-colorspace=Linear" --architecture=ARM64 --extra-editor-arg="-executemethod Editor.Setup" --category=URP --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --timeout=2000
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
        players:
            paths:
              -  "players/**"
URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_il2cpp_apiNet4_Linear_CUSTOM-REVISION:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_playmode_runtime_il2cpp_apiNet4_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::mobile::android
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    commands:
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
      -  powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                 set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                 utr --suite=playmode --platform=Android --artifacts_path=test-results --player-load-path=players --scripting-backend=IL2CPP --extra-editor-arg="-colorspace=Linear" --reruncount=2 --report-performance-data --performance-project-id=BoatAttack --architecture=ARM64 --editor-location=WindowsEditor --timeout=1200
      -  start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:android
         rerun: always
      -  path: .yamato/urp_performance_boatattack-android-vulkan.yml#Build_URP_Performance_BoatAttack_Android_Vulkan_Player_il2cpp_apiNet4_Linear_CUSTOM-REVISION
         rerun: always
Build_URP_Performance_BoatAttack_Android_Vulkan_Player_il2cpp_apiNet4_Linear_CUSTOM-REVISION:
    name: Build URP_Performance_BoatAttack on Android_Vulkan_il2cpp_apiNet4_Linear_Player on version CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    commands:
      -  git clone https://github.com/Unity-Technologies/BoatAttack.git -b feature/benchmark TestProjects/BoatAttack
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.addressables@1.14.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework@1.1.18 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.render-pipelines.core  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set project-update false --project-path .
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                  git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                  set /p GIT_REVISIONDATE=<revdate.tmp
                  echo %GIT_REVISIONDATE%
                  del revdate.tmp
                  utr --suite=playmode --platform=Android --testproject=./TestProjects/BoatAttack --extra-editor-arg="-playergraphicsapi=Vulkan" --editor-location=./WindowsEditor --artifacts_path=test-results --player-save-path=players --build-only --scripting-backend=IL2CPP --extra-editor-arg="-colorspace=Linear" --architecture=ARM64 --extra-editor-arg="-executemethod Editor.Setup" --category=URP --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --timeout=2000
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
        players:
            paths:
              -  "players/**"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:android
         rerun: always
URP_Performance_BoatAttack_Android_Vulkan_performance_playmode_runtime_mono_apiNet2_Linear_CUSTOM-REVISION:
    name: URP_Performance_BoatAttack on Android_Vulkan_performance_playmode_runtime_mono_apiNet2_Linear on version CUSTOM-REVISION
    agent:
        type: Unity::mobile::android
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    commands:
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  '%ANDROID_SDK_ROOT%\platform-tools\adb.exe connect %BOKKEN_DEVICE_IP%'
      -  powershell %ANDROID_SDK_ROOT%\platform-tools\adb.exe devices
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                 set ANDROID_DEVICE_CONNECTION=%BOKKEN_DEVICE_IP%
                 utr --suite=playmode --platform=Android --artifacts_path=test-results --player-load-path=players --scripting-backend=Mono2x --extra-editor-arg="-colorspace=Linear" --reruncount=2 --report-performance-data --performance-project-id=BoatAttack --architecture=ARM64 --editor-location=WindowsEditor --timeout=1200
      -  start %ANDROID_SDK_ROOT%\platform-tools\adb.exe kill-server
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:android
         rerun: always
      -  path: .yamato/urp_performance_boatattack-android-vulkan.yml#Build_URP_Performance_BoatAttack_Android_Vulkan_Player_mono_apiNet2_Linear_CUSTOM-REVISION
         rerun: always
Build_URP_Performance_BoatAttack_Android_Vulkan_Player_mono_apiNet2_Linear_CUSTOM-REVISION:
    name: Build URP_Performance_BoatAttack on Android_Vulkan_mono_apiNet2_Linear_Player on version CUSTOM-REVISION
    agent:
        type: Unity::VM
        image: mobile/android-execution-r19:stable
        flavor: b1.large
    variables:
        UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
        CUSTOM_REVISION: custom_revision_not_set
    commands:
      -  git clone https://github.com/Unity-Technologies/BoatAttack.git -b feature/benchmark TestProjects/BoatAttack
      -  choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
      -  choco install unity-config
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.core@file:../../../com.unity.render-pipelines.core" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.render-pipelines.universal@file:../../../com.unity.render-pipelines.universal" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.shadergraph@file:../../../com.unity.shadergraph" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.addressables@1.14.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.scriptablebuildpipeline@1.11.2 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework@1.1.18 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.performance@2.3.1-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.utp-reporter@1.0.2-preview --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency com.unity.test-framework.build@0.0.1-preview.12 --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.test.metadata-manager@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.test.metadata-manager.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "com.unity.testing.graphics-performance@ssh://git@github.cds.internal.unity3d.com/unity/com.unity.testing.graphics-performance.git"  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add dependency "unity.graphictests.performance.universal@ssh://git@github.cds.internal.unity3d.com/unity/unity.graphictests.performance.universal.git" --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.cli-project-setup  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.test.performance.runtimesettings  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable test.metadata-manager  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.testing.graphics-performance --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable com.unity.render-pipelines.core  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project add testable unity.graphictests.performance.universal  --project-path .
      -  cd TestProjects/BoatAttack && unity-config project set project-update false --project-path .
      -  curl -s https://artifactory.internal.unity3d.com/core-automation/tools/utr-standalone/utr.bat --output utr.bat
      -  pip install unity-downloader-cli --index-url https://artifactory.prd.it.unity3d.com/artifactory/api/pypi/pypi/simple --upgrade
      -  unity-downloader-cli --source-file unity_revision.txt -p WindowsEditor -c editor -c il2cpp -c android  --wait --published-only
      -  NetSh Advfirewall set allprofiles state off
      -  |5-

                  git rev-parse HEAD | git show -s --format=%%cI > revdate.tmp
                  set /p GIT_REVISIONDATE=<revdate.tmp
                  echo %GIT_REVISIONDATE%
                  del revdate.tmp
                  utr --suite=playmode --platform=Android --testproject=./TestProjects/BoatAttack --extra-editor-arg="-playergraphicsapi=Vulkan" --editor-location=./WindowsEditor --artifacts_path=test-results --player-save-path=players --build-only --scripting-backend=Mono2x --extra-editor-arg="-colorspace=Linear" --architecture=ARM64 --extra-editor-arg="-executemethod Editor.Setup" --category=URP --extra-editor-arg="-addscenetobuild=Assets/scenes/Testing/benchmark_island-static.unity" --extra-editor-arg="-packageundertestname=com.unity.render-pipelines.universal" --extra-editor-arg="-packageundertestrev=%GIT_REVISION%" --extra-editor-arg="-packageundertestrevdate=%GIT_REVISIONDATE%" --extra-editor-arg="-packageundertestbranch=%GIT_BRANCH%" --timeout=2000
    artifacts:
        logs:
            paths:
              -  "**/test-results/**"
              -  "TestProjects/BoatAttack/Logs/*.log"
        players:
            paths:
              -  "players/**"
    dependencies:
      -  path: .yamato/_editor_priming.yml#editor:priming:CUSTOM-REVISION:android
         rerun: always
