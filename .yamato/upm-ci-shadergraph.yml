editors:
  - version: 2020.1
    rerun_strategy: on-new-revision
  - version: fast-2020.1
    rerun_strategy: on-new-revision
  - version: trunk
    rerun_strategy: on-new-revision
  - version: fast-trunk
    rerun_strategy: on-new-revision
  - version: CUSTOM-REVISION
    rerun_strategy: always
platforms:
  - name: Win
    os: windows
    type: Unity::VM::GPU
    image: sdet/gamecode_win10:stable
    flavor: b1.large
    components:
      - editor
      - il2cpp
  - name: OSX_Metal
    os: macos
    type: Unity::metal::macmini
    image: slough-ops/macos-10.14-xcode:stable
    flavor: m1.mac
    components:
      - editor
      - il2cpp
  - name: OSX_OpenGLCore
    os: macos
    type: Unity::VM::osx
    image: buildfarm/mac:stable
    flavor: m1.mac
    components:
      - editor
      - il2cpp
  - name: Linux
    os: linux
    type: Unity::VM::GPU
    image: cds-ops/ubuntu-18.04-base:stable
    flavor: b1.large
    components:
      - editor
      - il2cpp
testplatforms:
  - name: Standalone
    args: --suite=playmode --platform=Standalone
  - name: playmode
    args: --suite=playmode
  - name: editmode
    args: --suite=editor --platform=editmode
projects:
  - name: ShaderGraph
    folder: ShaderGraph
win_apis:
  - name: DX11
    cmd: -force-d3d11
  - name: Vulkan
    cmd: -force-vulkan
mac_apis:
  - name: metal
  - name: openglcore
linux_apis:
  - name: OpenGLCore
    cmd: -force-glcore
  - name: Vulkan
    cmd: -force-vulkan
---
{% for project in projects %}
{% for editor in editors %}
{% for platform in platforms %}

{% if platform.name == "Win" %}

{% for testplatform in testplatforms %}
{% for win_api in win_apis %}

{% if testplatform.name == "Standalone" %}
{{ project.name }}_Win_{{ win_api.name }}_{{ testplatform.name }}_{{ editor.version }}:
  name : Test {{ project.name }} on Win_{{ win_api.name }}_{{ testplatform.name }} on version {{ editor.version }}
  agent:
    flavor: b1.large
    type: Unity::VM::GPU
    image: sdet/gamecode_win10:stable
  skip_checkout: true
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    {% if editor.version == 'CUSTOM-REVISION' %}
    CUSTOM_REVISION: custom_revision_not_set
    {% endif %}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git  TestProjects/{{ project.folder }}/utr
    - pip install unity-downloader-cli --extra-index-url https://artifactory.internal.unity3d.com/api/pypi/common-python/simple --upgrade

    - cd TestProjects/{{ project.folder }} && unity-downloader-cli --source-file ../../unity_revision.txt {% for component in platform.components %}-c {{ component }} {% endfor %}--wait --published-only

    - cd TestProjects/{{ project.folder }} && utr\utr {{ testplatform.args }}Windows64 --artifacts_path=test-results --timeout=1200 --player-load-path=../../players --player-connection-ip=auto
  artifacts:
    logs:
      paths:
        - "**/test-results/**"
  dependencies:
    - path: .yamato/z_editor.yml#editor:priming:{{ editor.version }}:{{ platform.os }}
      rerun: {{ editor.rerun_strategy }}
    - path: .yamato/upm-ci-shadergraph.yml#Build_{{ project.name }}_Win_{{ win_api.name }}_Player_{{ editor.version }}
      rerun: {{ editor.rerun_strategy }}
  
Build_{{ project.name }}_Win_{{ win_api.name }}_Player_{{ editor.version }}:
  name : Build {{ project.name }} on Win_{{ win_api.name }}_Player on version {{ editor.version }}
  agent:
    flavor: b1.xlarge
    type: Unity::VM
    image: sdet/gamecode_win10:stable
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    {% if editor.version == 'CUSTOM-REVISION' %}
    CUSTOM_REVISION: custom_revision_not_set
    {% endif %}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git  TestProjects/{{ project.folder }}/utr
    - pip install unity-downloader-cli --extra-index-url https://artifactory.internal.unity3d.com/api/pypi/common-python/simple --upgrade
    
    - cd TestProjects/{{ project.folder }} && unity-downloader-cli --source-file ../../unity_revision.txt {% for component in platform.components %}-c {{ component }} {% endfor %}--wait --published-only

    - cd TestProjects/{{ project.folder }} && utr\utr {{ testplatform.args }}Windows64 --extra-editor-arg="-executemethod" --extra-editor-arg="CustomBuild.BuildWindows{{ win_api.name }}Linear" --testproject=. --editor-location=.Editor --artifacts_path=test-results --timeout=1200 --player-save-path=../../players --build-only
  dependencies:
    - path: .yamato/z_editor.yml#editor:priming:{{ editor.version }}:{{ platform.os }}
      rerun: {{ editor.rerun_strategy }}
  artifacts:
    logs:
      paths:
        - "**/test-results/**"
    players:
      paths:
        - "players/**"
  
{% else %}

{{ project.name }}_Win_{{ win_api.name }}_{{ testplatform.name }}_{{ editor.version }}:
  name : {{ project.name }} on Win_{{ win_api.name }}_{{ testplatform.name }} on version {{ editor.version }}
  agent:
    {% if testplatform.name == "editmode" %}
    type: Unity::VM
    {% else %}
    type: Unity::VM::GPU
    {% endif %} 
    image: {{ platform.image }}      
    flavor: {{ platform.flavor }}
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    {% if editor.version == 'CUSTOM-REVISION' %}
    CUSTOM_REVISION: custom_revision_not_set
    {% endif %}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git  TestProjects/{{ project.folder }}/utr
    - pip install unity-downloader-cli --extra-index-url https://artifactory.internal.unity3d.com/api/pypi/common-python/simple --upgrade
    
    - cd TestProjects/{{ project.folder }} && unity-downloader-cli --source-file ../../unity_revision.txt {% for component in platform.components %}-c {{ component }} {% endfor %}--wait --published-only  

    - cd TestProjects/{{ project.folder }} && utr\utr {{ testplatform.args }} --extra-editor-arg="{{ win_api.cmd }}" --testproject=. --editor-location=.Editor --artifacts_path=test-results
  dependencies:
    - path: .yamato/z_editor.yml#editor:priming:{{ editor.version }}:{{ platform.os }}
      rerun: {{ editor.rerun_strategy }}
  artifacts:
    logs:
      paths:
        - "**/test-results/**"

{% endif %}


{% endfor %}    
{% endfor %}

{% elsif platform.name == "OSX_OpenGLCore" %}

{% for testplatform in testplatforms %}      
{% if testplatform.name == "Standalone" %}
Build_{{ project.name }}_OSX_OpenGLCore_Player_{{ editor.version }}:
  name : Build {{ project.name }} on OSX_OpenGLCore_Player on version {{ editor.version }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}      
    flavor: {{ platform.flavor }}
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    {% if editor.version == 'CUSTOM-REVISION' %}
    CUSTOM_REVISION: custom_revision_not_set
    {% endif %}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git  TestProjects/{{ project.folder }}/utr
    - pip install unity-downloader-cli --extra-index-url https://artifactory.internal.unity3d.com/api/pypi/common-python/simple --upgrade
    
    - cd TestProjects/{{ project.folder }} && unity-downloader-cli --source-file ../../unity_revision.txt {% for component in platform.components %}-c {{ component }} {% endfor %}--wait --published-only

    - cd TestProjects/{{ project.folder }} && utr/utr {{ testplatform.args }}OSX --testproject=. --editor-location=.Editor --artifacts_path=test-results --timeout=1200 --player-save-path=players --build-only
  dependencies:
    - path: .yamato/z_editor.yml#editor:priming:{{ editor.version }}:{{ platform.os }}
      rerun: {{ editor.rerun_strategy }}
  artifacts:
    logs:
      paths:
        - "**/test-results/**"
    players:
      paths:
        - "players/**"

{{ project.name }}_OSX_OpenGLCore_Standalone_{{ editor.version }}:
  name: Test {{ project.name }} on OSX_OpenGLCore_{{ testplatform.name }} on version {{ editor.version }}
  agent:
      type: Unity::VM::osx
      image: buildfarm/mac:stable
      flavor: m1.mac
  skip_checkout: true
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    {% if editor.version == 'CUSTOM-REVISION' %}
    CUSTOM_REVISION: custom_revision_not_set
    {% endif %}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git  TestProjects/{{ project.folder }}/utr
    - pip install unity-downloader-cli --extra-index-url https://artifactory.internal.unity3d.com/api/pypi/common-python/simple --upgrade

    - cd TestProjects/{{ project.folder }} && unity-downloader-cli --source-file ../../unity_revision.txt {% for component in platform.components %}-c {{ component }} {% endfor %}--wait --published-only

    - cd TestProjects/{{ project.folder }} && utr/utr {{ testplatform.args }}OSX --testproject=. --editor-location=.Editor --artifacts_path=test-results --timeout=1200 --player-load-path=players --player-connection-ip=auto
  dependencies:
    - path: .yamato/z_editor.yml#editor:priming:{{ editor.version }}:{{ platform.os }}
      rerun: {{ editor.rerun_strategy }}
    - path: .yamato/upm-ci-shadergraph.yml#Build_{{ project.name }}_OSX_OpenGLCore_Player_{{ editor.version }}
      rerun: {{ editor.rerun_strategy }}
  artifacts:
      logs:
          paths:
              - "**/test-results/**"
{% else %}
        
{{ project.name }}_OSX_OpenGLCore_{{ testplatform.name }}_{{ editor.version }}:
  name : {{ project.name }} on OSX_OpenGLCore_{{ testplatform.name }} on version {{ editor.version }}
  agent:
    type: Unity::VM::osx
    image: buildfarm/mac:stable
    flavor: m1.mac
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    {% if editor.version == 'CUSTOM-REVISION' %}
    CUSTOM_REVISION: custom_revision_not_set
    {% endif %}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git  TestProjects/{{ project.folder }}/utr
    - pip install unity-downloader-cli --extra-index-url https://artifactory.internal.unity3d.com/api/pypi/common-python/simple --upgrade
    
    - cd TestProjects/{{ project.folder }} && unity-downloader-cli --source-file ../../unity_revision.txt {% for component in platform.components %}-c {{ component }} {% endfor %}--wait --published-only

    - cd TestProjects/{{ project.folder }} && utr/utr {{ testplatform.args }} --testproject=. --editor-location=.Editor --artifacts_path=test-results
     
    {% if testplatform.name == "Standalone" %}
    - cd TestProjects/{{ project.folder }} && utr/utr {{ testplatform.args }}OSX --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results --timeout=1200
    {% else %}
    - cd TestProjects/{{ project.folder }} && utr/utr {{ testplatform.args }} --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results
    {% endif %}
  dependencies:
    - path: .yamato/z_editor.yml#editor:priming:{{ editor.version }}:{{ platform.os }}
      rerun: {{ editor.rerun_strategy }}
  artifacts:
    logs:
      paths:
        - "**/test-results/**"
        
{% endif %}
{% endfor %}

{% elsif platform.name == "OSX_Metal" %}

{% for testplatform in testplatforms %}
{% if testplatform.name == "editmode" %}
#skip because we don't need a GPU to run editmode tests
{% else %}
{{ project.name }}_OSX_Metal_{{ testplatform.name }}_{{ editor.version }}:
  name : {{ project.name }} on OSX_Metal_{{ testplatform.name }} on version {{ editor.version }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}      
    flavor: {{ platform.flavor }}
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    {% if editor.version == 'CUSTOM-REVISION' %}
    CUSTOM_REVISION: custom_revision_not_set
    {% endif %}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git TestProjects/{{ project.folder }}/utr
    
    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP "bash -lc 'pip3 install --user unity-downloader-cli --extra-index-url https://artifactory.internal.unity3d.com/api/pypi/common-python/simple --upgrade'"
    - scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r $YAMATO_SOURCE_DIR bokken@$BOKKEN_DEVICE_IP:~/ScriptableRenderPipeline
    - scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" ~/.ssh/id_rsa_macmini bokken@$BOKKEN_DEVICE_IP:~/.ssh/id_rsa_macmini

    - ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP '/Users/bokken/Library/Python/3.7/bin/unity-downloader-cli --source-file ~/ScriptableRenderPipeline/unity_revision.txt {% for component in platform.components %}-c {{ component }} {% endfor %}--wait --published-only'
    
    {% if testplatform.name == "Standalone" %}
    - |
      ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP 'cd ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }} && ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/utr/utr {{ testplatform.args }}OSX  --testproject=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }} --editor-location=/Users/bokken/.Editor --artifacts_path=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results --timeout=1200'
    {% else %}
    - |
      ssh -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" bokken@$BOKKEN_DEVICE_IP 'cd ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }} && ~/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/utr/utr {{ testplatform.args }} --testproject=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }} --editor-location=/Users/bokken/.Editor --artifacts_path=/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results'
    {% endif %}
      UTR_RESULT=$?
      mkdir -p TestProjects/{{ project.folder }}/test-results/
      scp -i ~/.ssh/id_rsa_macmini -o "StrictHostKeyChecking=no" -r bokken@$BOKKEN_DEVICE_IP:/Users/bokken/ScriptableRenderPipeline/TestProjects/{{ project.folder }}/test-results/ TestProjects/{{ project.folder }}/test-results/
      exit $UTR_RESULT
  dependencies:
    - path: .yamato/z_editor.yml#editor:priming:{{ editor.version }}:{{ platform.os }}
      rerun: {{ editor.rerun_strategy }}
  artifacts:
    logs:
      paths:
        - "**/test-results/**"
{% endif %}
{% endfor %}

{% elsif platform.name == "Linux" %}

{% for testplatform in testplatforms %}
{% for linux_api in linux_apis %}
# Separate block for linux, because the linux agents currently need extra configuration
{{ project.name }}_Linux_{{ linux_api.name }}_{{ testplatform.name }}_{{ editor.version }}:
  name : {{ project.name }} on Linux_{{ linux_api.name }}_{{ testplatform.name }} on version {{ editor.version }}
  agent:
    {% if testplatform.name == "editmode" %}
    type: Unity::VM
    {% else %}
    type: {{ platform.type }}
    {% endif %} 
    image: {{ platform.image }}      
    flavor: {{ platform.flavor }}
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
    {% if editor.version == 'CUSTOM-REVISION' %}
    CUSTOM_REVISION: custom_revision_not_set
    {% endif %}
  commands:
    - sudo -H pip install --upgrade pip
    - sudo -H pip install unity-downloader-cli --extra-index-url https://artifactory.internal.unity3d.com/api/pypi/common-python/simple --upgrade
    - sudo npm install upm-ci-utils -g --registry https://api.bintray.com/npm/unity/unity-npm
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git TestProjects/{{ project.folder }}/utr
    
    - cd TestProjects/{{ project.folder }} && sudo unity-downloader-cli --source-file ../../unity_revision.txt {% for component in platform.components %}-c {{ component }} {% endfor %}--wait --published-only
    
    {% if testplatform.name == "Standalone" %}
    - cd TestProjects/{{ project.folder }} && DISPLAY=:0.0 utr/utr {{ testplatform.args }}Linux64 --extra-editor-arg="-executemethod" --extra-editor-arg="CustomBuild.BuildLinux{{ linux_api.name }}Linear" --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results
    {% else %}
    - cd TestProjects/{{ project.folder }} && DISPLAY=:0.0 utr/utr --extra-editor-arg="{{ linux_api.cmd }}"  {{ testplatform.args }} --testproject=. --editor-location=.Editor --artifacts_path=upm-ci~/test-results
    {% endif %}
  dependencies:
    - path: .yamato/z_editor.yml#editor:priming:{{ editor.version }}:{{ platform.os }}
      rerun: {{ editor.rerun_strategy }}
  artifacts:
    logs:
      paths:
        - "**/upm-ci~/test-results/**/*"  
{% endfor %}   
{% endfor %}


{% endif %}
{% endfor %}


All_{{ project.name }}_{{ editor.version }}:
  name: All {{ project.name }} CI - {{ editor.version }}
  agent:
    type: Unity::VM
    image: cds-ops/ubuntu-18.04-agent:stable
    flavor: b1.small
  {% if editor.version == 'CUSTOM-REVISION' %}
  variables:
    CUSTOM_REVISION: custom_revision_not_set
  {% endif %}
  commands:
    - dir
  dependencies:
  {% for platform in platforms %}
  {% for testplatform in testplatforms %}
  {% if platform.name == "OSX_OpenGLCore" %}
  
  {% if testplatform.name == "editmode" %}
    - path: .yamato/upm-ci-{{ project.name | downcase }}.yml#{{ project.name }}_{{ platform.name }}_{{ testplatform.name }}_{{ editor.version }}
      rerun: {{ editor.rerun_strategy }}
  {% endif %}
  
  {% elsif platform.name == "OSX_Metal"  and testplatform.name == "editmode" %}
  
  {% elsif platform.name == "OSX_Metal" %}
  #skip
  {% elsif platform.name == "Linux" %}
  #skip
  
  {% elsif platform.name == "Win" %}
  {% for win_api in win_apis %}
  {% if win_api.name == "Vulkan" %}
  #skip
  {% else %}
    - path: .yamato/upm-ci-{{ project.name | downcase }}.yml#{{ project.name }}_{{ platform.name }}_{{ win_api.name }}_{{ testplatform.name }}_{{ editor.version }}
      rerun: {{ editor.rerun_strategy }}
  {% endif %}
  {% endfor %}

  {% else %}
    - path: .yamato/upm-ci-{{ project.name | downcase }}.yml#{{ project.name }}_{{ platform.name }}_{{ testplatform.name }}_{{ editor.version }} 
      rerun: {{ editor.rerun_strategy }}
  {% endif %}
    
  {% endfor %}
  {% endfor %}
{% endfor %}    
{% endfor %}
