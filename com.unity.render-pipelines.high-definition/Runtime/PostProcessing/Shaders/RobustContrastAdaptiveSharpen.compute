#pragma kernel KMain

#pragma multi_compile _ ENABLE_ALPHA
#pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch

#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"

TEXTURE2D_X(_InputTexture);
RW_TEXTURE2D_X(float4, _OutputTexture);

#define FSR_INPUT_TEXTURE _InputTexture
#define FSR_INPUT_SAMPLER s_linear_clamp_sampler
#ifdef ENABLE_ALPHA
    #define FSR_ENABLE_ALPHA 1
#endif
#include "Packages/com.unity.render-pipelines.core/Runtime/PostProcessing/Shaders/FSRCommon.hlsl"

[numthreads(64, 1, 1)]
void KMain(uint3 LocalThreadId : SV_GroupThreadID, uint3 WorkGroupId : SV_GroupID, uint3 dispatchThreadId : SV_DispatchThreadID)
{
    UNITY_XR_ASSIGN_VIEW_INDEX(dispatchThreadId.z);

    // Do remapping of local xy in workgroup for a more PS-like swizzle pattern.
    uint2 gxy = ARmp8x8(LocalThreadId.x) + uint2(WorkGroupId.x << 3u, WorkGroupId.y << 3u);

#ifdef ENABLE_ALPHA
    _OutputTexture[COORD_TEXTURE2D_X(gxy)] = ApplyRCAS(gxy);
#else
    _OutputTexture[COORD_TEXTURE2D_X(gxy)] = float4(ApplyRCAS(gxy), 1.0);
#endif
}
