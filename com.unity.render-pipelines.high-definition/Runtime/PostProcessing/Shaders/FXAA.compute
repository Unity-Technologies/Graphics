// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel FXAA

#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Builtin/BuiltinData.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/PostProcessing/Shaders/FXAA.hlsl"


RW_TEXTURE2D_X(float3, _OutputTexture);
TEXTURE2D_X(_InputTexture);

[numthreads(8,8,1)]
void FXAA(uint3 dispatchThreadId : SV_DispatchThreadID)
{
    UNITY_XR_ASSIGN_VIEW_INDEX(dispatchThreadId.z);
    uint2 positionSS = dispatchThreadId.xy;
    float2 positionNDC = positionSS * _ScreenSize.zw + (0.5 * _ScreenSize.zw);

    float3 outColor = Load(_InputTexture, positionSS, 0, 0);

    RunFXAA(_InputTexture, s_linear_clamp_sampler, outColor, positionSS, positionNDC);

    _OutputTexture[COORD_TEXTURE2D_X(positionSS)] = outColor;
}
